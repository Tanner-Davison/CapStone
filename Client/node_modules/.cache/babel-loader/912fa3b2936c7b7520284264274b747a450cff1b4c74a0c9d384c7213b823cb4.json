{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanner\\\\Desktop\\\\Chatty-Chatter\\\\Chatty_Chatter\\\\Client\\\\src\\\\components\\\\MainRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport AddBoxOutlinedIcon from \"@mui/icons-material/AddBoxOutlined\";\nimport IndeterminateCheckBoxOutlinedIcon from \"@mui/icons-material/IndeterminateCheckBoxOutlined\";\nimport ReplyRoundedIcon from \"@mui/icons-material/ReplyRounded\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"../App.css\";\nimport Header from \"./Header/Header\";\nimport \"./MainRoom.css\";\nimport { useIsTyping } from \"./Utility-mainRoom/IsTyping.js\";\nimport PrivateRoomAccess from \"./Utility-mainRoom/PrivateRoomAccess.js\";\nimport TypingComp from \"./Utility-mainRoom/TypingComp\";\nimport getCurrentTime from \"./Utility-mainRoom/getTime\";\nimport { loadRoomHistory } from \"./Utility-mainRoom/loadRoomHistory\";\nimport sendIcon from \"./Utility-mainRoom/svgs/SendIcon.svg\";\nimport useJoinedList from \"./Utility-mainRoom/useJoinedList.js\";\nimport { LoginContext } from \"./contexts/LoginContext\";\nimport Message from \"./Message.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainRoom = () => {\n  _s();\n  const {\n    userLoginInfo,\n    mainAccess,\n    setMainAccess,\n    socket,\n    setSocket\n  } = useContext(LoginContext);\n  const PORT = process.env.REACT_APP_API_URL;\n  const [clicked, setClicked] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [messageRecieved, setMessageRecieved] = useState([]);\n  const [roomData, setRoomData] = useState([]);\n  const lastRoom = sessionStorage.getItem(\"lastRoom\");\n  const initialRoom = lastRoom ? parseInt(lastRoom, 10) : 1;\n  const [room, setRoom] = useState(initialRoom);\n  const [searchName, setSearchName] = useState('');\n  const sessionImage = sessionStorage.getItem(\"image-url\");\n  const sessionCloudinary_id = sessionStorage.getItem(\"cloudinary_id\");\n  const messagesStartRef = useRef(null);\n  const [roomIsEmpty, setRoomIsEmpty] = useState(false);\n  const [isSocketConnected, setSocketConnected] = useState(false);\n  const [isPrivateRoom, setIsPrivateRoom] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const typingTimeoutId = useRef(null);\n  const currentTyper = useRef(null);\n  const {\n    addRoom,\n    error,\n    joinedListResponse,\n    setJoinedListResponse,\n    removeRoom\n  } = useJoinedList();\n  const [following, setFollowing] = useState(null);\n  const navigate = useNavigate();\n  const handleIsTyping = useIsTyping(socket, userLoginInfo.username, room, typingTimeoutId);\n  const getSearchResults = async () => {\n    try {\n      const response = await axios.get(`${PORT}/searchByNameFinder/${searchName}`);\n      setMainAccess(true);\n      setSearchName('');\n      return response.data;\n    } catch (error) {\n      console.error(\"Error in getSearchResults:\", error);\n      // Handle the error (return a default value, show a message, etc.)\n      return null;\n    }\n  };\n  const joinRoom = async () => {\n    if (searchName !== '') {\n      const searchRoomData = await getSearchResults();\n      if (searchRoomData) {\n        const stringRoom = searchRoomData.room_number;\n        const stringMessages = searchRoomData.messageHistory;\n        setRoom(stringRoom);\n        setSearchName('');\n        setMessageRecieved(stringMessages);\n        return navigate(`/chatroom/${stringRoom}`);\n      }\n    }\n    socket.emit(\"join_room\", {\n      room,\n      searchName,\n      username: userLoginInfo.username,\n      message\n    });\n    navigate(`/chatroom/${room}`);\n    const messages = await loadRoomHistory(room);\n    setRoomData(messages.allRoomData);\n    if (messages.allRoomData.private_room) {\n      try {\n        const privateAccessExist = await axios.get(`${PORT}/api/users/${userLoginInfo.username}/rooms`);\n        const response = privateAccessExist === null || privateAccessExist === void 0 ? void 0 : privateAccessExist.data.roomsJoined;\n        const listContainsRoom = response.find(roomData => parseInt(roomData.room) === parseInt(room));\n        if (listContainsRoom) {\n          setIsPrivateRoom(false);\n          setFollowing(true);\n        } else {\n          setIsPrivateRoom(true);\n        }\n      } catch (err) {\n        console.log(err + `error in joinRoom mainRoom function`);\n      }\n    }\n    if (messages.allRoomData.private_room === false) {\n      try {\n        const publicAccess = await axios.get(`${PORT}/api/users/${userLoginInfo.username}/rooms`);\n        const roomsJoinedList = publicAccess.data.roomsJoined;\n        const isInJoinedList = roomsJoinedList.find(roomToFind => parseInt(roomData.room) === parseInt(roomToFind));\n        if (isInJoinedList) {\n          setFollowing(true);\n        } else if (!isInJoinedList) {\n          setFollowing(false);\n        }\n      } catch (err) {\n        console.log(err + \"mainRoom in JoinRoom() function for public access\");\n      }\n    }\n    sessionStorage.setItem(\"lastRoom\", room.toString());\n    setMessageRecieved(messages.messageHistory);\n    if (messages.messageHistory.length <= 0) {\n      setRoomIsEmpty(true);\n    }\n  };\n  const roomNameChanger = event => {\n    setSearchName(event.target.value);\n  };\n  const roomChanger = event => {\n    setRoom(event.target.value);\n  };\n  const handleJoinRoomBtn = async () => {\n    const addTheRoom = await addRoom(userLoginInfo.username, room, roomData.room_name);\n    if (addTheRoom) {\n      setJoinedListResponse(addTheRoom);\n      if (addTheRoom === 'User Joined the room successfully.') {}\n      setFollowing(true);\n      return;\n    }\n    if (error) {\n      console.error(error);\n    }\n  };\n  const handleRemoveRoomBtn = async () => {\n    const removeFromList = await removeRoom(userLoginInfo.username, room, roomData.room_name);\n    if (removeFromList) {\n      setJoinedListResponse(removeFromList);\n      setFollowing(false);\n    }\n    if (error) {\n      console.error(error);\n    }\n  };\n  const checkList = async () => {\n    try {\n      const response = await axios.get(`${process.env.PORT}/api/users/${userLoginInfo.username}/rooms`);\n      const publicAccess = response.data.roomsJoined;\n      const listContainsRoom = publicAccess.find(roomData => parseInt(roomData.room) === parseInt(room));\n      if (listContainsRoom) {\n        setFollowing(true);\n      } else {\n        setFollowing(false);\n      }\n    } catch (error) {\n      console.error(\"Error in checkList:\", error);\n      // Handle the error as needed\n    }\n  };\n\n  const sendMessageFunc = () => {\n    setClicked(true);\n    setTimeout(() => {\n      setClicked(false);\n    }, 800);\n    if (message === \"\") {\n      return;\n    }\n    const data = {\n      message,\n      room,\n      timestamp: getCurrentTime(),\n      username: userLoginInfo.username,\n      sentBy: userLoginInfo.username,\n      imageUrl: sessionImage ? sessionImage : userLoginInfo.imageUrl,\n      cloudinary_id: sessionCloudinary_id ? sessionCloudinary_id : userLoginInfo.cloudinary_id\n    };\n    socket.emit(\"send_message\", data);\n    setMessageRecieved(prev => [...prev, data]);\n    setMessage(\"\");\n  };\n\n  // const deleteRoom = () => {\n  //   setMainAccess(true);\n  //   socket.emit(\"deleteRoom\", { room, username: userLoginInfo.username });\n  //   socket.off(\"join_room\", room);\n  //   navigate(\"/currentServers\");\n  // };\n\n  const leaveRoom = () => {\n    socket.emit(\"leaveroom\", room);\n    socket.disconnect();\n    navigate(\"/currentservers\");\n  };\n  useEffect(() => {\n    // Handle socket connection\n\n    if (!socket) {\n      setSocket(io.connect(`${process.env.PORT}`, {\n        reconnection: true,\n        reconnectionAttempts: 20,\n        reconnectionDelay: 2000\n      }));\n      return setMainAccess(true);\n    }\n    checkList();\n    const handleSocketConnect = async () => {\n      const fetchRoomHistoryData = async () => {\n        const data = await loadRoomHistory(room);\n        setMessageRecieved(data.messageHistory);\n        setSocketConnected(true);\n      };\n      await fetchRoomHistoryData();\n    };\n\n    // Initialize socket if not already initialized\n\n    // Auto join room if main access is true\n    if (mainAccess === true) {\n      joinRoom();\n      setMainAccess(false);\n    }\n\n    // Socket event handlers\n    socket.on(\"connect\", handleSocketConnect);\n    socket.on(\"disconnect\", reason => {\n      setSocketConnected(false);\n      setMainAccess(true);\n    });\n    socket.on(\"receive_data\", async roomFoundData => {\n      setRoomData(roomFoundData);\n      setRoom(roomFoundData.room_number);\n    });\n    socket.on(\"receive_message\", async data => {\n      if (data.room !== room) return;\n      setTyping(false);\n      const newData = {\n        message: data.message,\n        username: data.sentBy,\n        timestamp: getCurrentTime(),\n        imageUrl: data.imageUrl,\n        cloudinary_id: data.cloudinary_id\n      };\n      setMessageRecieved(prev => [...prev, newData]);\n      await loadRoomHistory(data.room);\n    });\n    socket.on(\"sender_is_typing\", data => {\n      currentTyper.current = data.toString();\n      clearTimeout(typingTimeoutId.current);\n      setTyping(true);\n      typingTimeoutId.current = setTimeout(() => {\n        setTyping(false);\n      }, 4000);\n    });\n    // Cleanup functions\n    return () => {\n      socket.off(\"join_room\", joinRoom);\n      socket.off(\"receive_message\");\n      socket.off(\"disconnect\");\n      socket.off(\"sender_is_typing\", useIsTyping);\n      socket.off(\"receiveData\", joinRoom);\n    };\n    //eslint-disable-next-line\n  }, [socket, messageRecieved, isSocketConnected, typing, room]);\n  useEffect(() => {\n    if (messagesStartRef.current) {\n      messagesStartRef.current.scrollTop = messagesStartRef.current.scrollHeight;\n    }\n  }, [messageRecieved, typing]);\n  useEffect(() => {\n    if (joinedListResponse === \"room was removed successfully\") {\n      return setFollowing(false);\n    } else if (joinedListResponse === \"User joined the room successfully.\") {\n      return setFollowing(true);\n    } else if (joinedListResponse === '') {\n      checkList();\n    }\n    if (joinedListResponse === 'User has already joined this room.') {\n      setFollowing(true);\n    }\n    //eslint-disable-next-line\n  }, [following, joinedListResponse]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      roomChanger: roomChanger,\n      room: room ? room : 1,\n      joinRoom: joinRoom,\n      roomNameChanger: roomNameChanger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-wrapper-main-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-messages\",\n        ref: messagesStartRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room_name\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textTransform: 'capitalize'\n            },\n            children: lastRoom ? roomData.room_name : String.fromCodePoint(0x1f449) + lastRoom + \" No Existing Room\" + String.fromCodePoint(0x1f448)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), isPrivateRoom && /*#__PURE__*/_jsxDEV(PrivateRoomAccess, {\n          style: {\n            textTransform: 'capitalize'\n          },\n          roomData: roomData,\n          setIsPrivateRoom: setIsPrivateRoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), messageRecieved.length > 0 && !isPrivateRoom && messageRecieved.map((msg, index) => {\n          const timestampParts = msg.timestamp.split(\" \");\n          const datePart = timestampParts[0];\n          const timePart = timestampParts[1] + \" \" + timestampParts[2];\n          if (msg.sentBy === userLoginInfo.username) {\n            // Message sent by current user\n            let userLoggedIn = \"@\" + userLoginInfo.username.toUpperCase();\n            //BLUE USER MESSAGE\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messagesContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container blue\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-timestamp-left\",\n                  children: index !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [datePart, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 29\n                    }, this), timePart]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-blue\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: userLoginInfo.imageUrl || userLoginInfo.cloudinary_id,\n                    loading: \"lazy\",\n                    className: \"user-profile-pic blue\",\n                    alt: \"Profile-Pic\",\n                    onClick: () => navigate(`/profile/${userLoginInfo.username}`)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Message, {\n                    msg: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"user\",\n                  children: userLoggedIn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this);\n          } else {\n            // GREEN USER MESSAGE\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messagesContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container green\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-timestamp-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [datePart, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 27\n                    }, this), index !== 0 && timePart]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-green\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: msg.imageUrl || msg.cloudinary_id,\n                    loading: \"lazy\",\n                    className: \"user-profile-pic green\",\n                    alt: \"Profile-Pic\",\n                    onClick: () => navigate(`/profile/${msg.sentBy}`)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Message, {\n                    msg: msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"user green\",\n                    children: msg.sentBy ? \"@\" + msg.sentBy.toUpperCase() : \"@\" + msg.username.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this);\n          }\n        }), roomIsEmpty && navigate(`/createroom/${room}`), typing === true && /*#__PURE__*/_jsxDEV(TypingComp, {\n          typer: currentTyper.current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), isPrivateRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helper_tools_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"leave-room-btn\",\n          onClick: leaveRoom,\n          children: [/*#__PURE__*/_jsxDEV(ReplyRoundedIcon, {\n            id: \"back-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), \"Chat-Hubs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), !isPrivateRoom && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Message...\",\n            id: \"send_message_input\",\n            value: message,\n            onChange: event => {\n              setMessage(event.target.value);\n              handleIsTyping(event);\n            },\n            maxLength: \"255\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `sendMsgBtn ${clicked ? \"open\" : \"\"}`,\n            onClick: sendMessageFunc,\n            children: [\"Send\", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendIcon,\n              className: ` ${clicked ? \"clicked\" : \"\"}`,\n              alt: \"icon-for-send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"helper_tools_wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"leave-room-btn\",\n            onClick: leaveRoom,\n            children: [/*#__PURE__*/_jsxDEV(ReplyRoundedIcon, {\n              id: \"back-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), \"Chat-Hubs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), !following && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"subscribe_to_room\",\n            onClick: () => handleJoinRoomBtn(),\n            children: [/*#__PURE__*/_jsxDEV(AddBoxOutlinedIcon, {\n              id: \"subscribe_btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 19\n            }, this), \"Subscribe\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this), following && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"subscribe_to_room _joined\",\n            onClick: () => handleRemoveRoomBtn(),\n            children: [/*#__PURE__*/_jsxDEV(IndeterminateCheckBoxOutlinedIcon, {\n              id: \"unsubscribe_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this), \"Unsubscribe\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"white\"\n          },\n          children: \"Status :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"statusBtn\",\n          onClick: () => {\n            joinRoom();\n          },\n          style: isSocketConnected ? {\n            backgroundColor: \"#323232\"\n          } : {\n            backgroundColor: \"red\",\n            color: \"#3691F0\"\n          },\n          children: [isSocketConnected && \"Connected\", !isSocketConnected && \"DISCONNECTED\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(MainRoom, \"6YziyCHmQmbHWDsiXawOlbcwgSg=\", false, function () {\n  return [useJoinedList, useNavigate, useIsTyping];\n});\n_c = MainRoom;\nexport default MainRoom;\nvar _c;\n$RefreshReg$(_c, \"MainRoom\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","AddBoxOutlinedIcon","IndeterminateCheckBoxOutlinedIcon","ReplyRoundedIcon","axios","useNavigate","io","Header","useIsTyping","PrivateRoomAccess","TypingComp","getCurrentTime","loadRoomHistory","sendIcon","useJoinedList","LoginContext","Message","jsxDEV","_jsxDEV","Fragment","_Fragment","MainRoom","_s","userLoginInfo","mainAccess","setMainAccess","socket","setSocket","PORT","process","env","REACT_APP_API_URL","clicked","setClicked","message","setMessage","messageRecieved","setMessageRecieved","roomData","setRoomData","lastRoom","sessionStorage","getItem","initialRoom","parseInt","room","setRoom","searchName","setSearchName","sessionImage","sessionCloudinary_id","messagesStartRef","roomIsEmpty","setRoomIsEmpty","isSocketConnected","setSocketConnected","isPrivateRoom","setIsPrivateRoom","typing","setTyping","typingTimeoutId","currentTyper","addRoom","error","joinedListResponse","setJoinedListResponse","removeRoom","following","setFollowing","navigate","handleIsTyping","username","getSearchResults","response","get","data","console","joinRoom","searchRoomData","stringRoom","room_number","stringMessages","messageHistory","emit","messages","allRoomData","private_room","privateAccessExist","roomsJoined","listContainsRoom","find","err","log","publicAccess","roomsJoinedList","isInJoinedList","roomToFind","setItem","toString","length","roomNameChanger","event","target","value","roomChanger","handleJoinRoomBtn","addTheRoom","room_name","handleRemoveRoomBtn","removeFromList","checkList","sendMessageFunc","setTimeout","timestamp","sentBy","imageUrl","cloudinary_id","prev","leaveRoom","disconnect","connect","reconnection","reconnectionAttempts","reconnectionDelay","handleSocketConnect","fetchRoomHistoryData","on","reason","roomFoundData","newData","current","clearTimeout","off","scrollTop","scrollHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","style","textTransform","String","fromCodePoint","map","msg","index","timestampParts","split","datePart","timePart","userLoggedIn","toUpperCase","src","loading","alt","onClick","typer","id","placeholder","onChange","maxLength","color","type","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Tanner/Desktop/Chatty-Chatter/Chatty_Chatter/Client/src/components/MainRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport AddBoxOutlinedIcon from \"@mui/icons-material/AddBoxOutlined\";\r\nimport IndeterminateCheckBoxOutlinedIcon from \"@mui/icons-material/IndeterminateCheckBoxOutlined\";\r\nimport ReplyRoundedIcon from \"@mui/icons-material/ReplyRounded\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport \"../App.css\";\r\nimport Header from \"./Header/Header\";\r\nimport \"./MainRoom.css\";\r\nimport { useIsTyping } from \"./Utility-mainRoom/IsTyping.js\";\r\nimport PrivateRoomAccess from \"./Utility-mainRoom/PrivateRoomAccess.js\";\r\nimport TypingComp from \"./Utility-mainRoom/TypingComp\";\r\nimport getCurrentTime from \"./Utility-mainRoom/getTime\";\r\nimport { loadRoomHistory } from \"./Utility-mainRoom/loadRoomHistory\";\r\nimport sendIcon from \"./Utility-mainRoom/svgs/SendIcon.svg\";\r\nimport useJoinedList from \"./Utility-mainRoom/useJoinedList.js\";\r\nimport { LoginContext } from \"./contexts/LoginContext\";\r\nimport Message from \"./Message.js\";\r\nconst MainRoom = () => {\r\n  const { userLoginInfo, mainAccess, setMainAccess, socket, setSocket } =\r\n    useContext(LoginContext);\r\n  const PORT = process.env.REACT_APP_API_URL;\r\n  const [clicked, setClicked] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageRecieved, setMessageRecieved] = useState([]);\r\n  const [roomData, setRoomData] = useState([]);\r\n  const lastRoom = sessionStorage.getItem(\"lastRoom\");\r\n  const initialRoom = lastRoom ? parseInt(lastRoom, 10) : 1;\r\n  const [room, setRoom] = useState(initialRoom);\r\n  const [searchName, setSearchName] = useState('');\r\n  const sessionImage = sessionStorage.getItem(\"image-url\");\r\n  const sessionCloudinary_id = sessionStorage.getItem(\"cloudinary_id\");\r\n  const messagesStartRef = useRef(null);\r\n  const [roomIsEmpty, setRoomIsEmpty] = useState(false);\r\n  const [isSocketConnected, setSocketConnected] = useState(false);\r\n  const [isPrivateRoom, setIsPrivateRoom] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const typingTimeoutId = useRef(null);\r\n  const currentTyper = useRef(null);\r\n\r\n  const {\r\n    addRoom,\r\n    error,\r\n    joinedListResponse,\r\n    setJoinedListResponse,\r\n    removeRoom,\r\n  } = useJoinedList();\r\n  const [following, setFollowing] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const handleIsTyping = useIsTyping(\r\n    socket,\r\n    userLoginInfo.username,\r\n    room,\r\n    typingTimeoutId\r\n  );\r\n  const getSearchResults = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${PORT}/searchByNameFinder/${searchName}`\r\n      );\r\n      setMainAccess(true);\r\n      setSearchName('')\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error in getSearchResults:\", error);\r\n      // Handle the error (return a default value, show a message, etc.)\r\n      return null;\r\n    }\r\n  };\r\n  const joinRoom = async () => {\r\n \r\n    if(searchName !== ''){\r\n      const searchRoomData = await getSearchResults();\r\n      if(searchRoomData){\r\n        const stringRoom = searchRoomData.room_number;\r\n        const stringMessages = searchRoomData.messageHistory;\r\n\r\n        setRoom(stringRoom)\r\n        setSearchName('')\r\n        setMessageRecieved(stringMessages)\r\n        return navigate(`/chatroom/${stringRoom}`)\r\n      }\r\n    }\r\n    socket.emit(\"join_room\", {\r\n      room,\r\n      searchName,\r\n      username: userLoginInfo.username,\r\n      message,\r\n    });\r\n    \r\n    navigate(`/chatroom/${room}`);\r\n    const messages = await loadRoomHistory(room);\r\n    setRoomData(messages.allRoomData);\r\n    if (messages.allRoomData.private_room) {\r\n      try {\r\n        const privateAccessExist = await axios.get(\r\n          `${PORT}/api/users/${userLoginInfo.username}/rooms`\r\n        );\r\n        const response = privateAccessExist?.data.roomsJoined;\r\n        const listContainsRoom = response.find(\r\n          (roomData) => parseInt(roomData.room) === parseInt(room)\r\n        );\r\n        if (listContainsRoom) {\r\n          setIsPrivateRoom(false);\r\n          setFollowing(true)\r\n        } else {\r\n          setIsPrivateRoom(true);\r\n        }\r\n      } catch (err) {\r\n        console.log(err + `error in joinRoom mainRoom function`);\r\n      }\r\n    }\r\n    if (messages.allRoomData.private_room === false) {\r\n      try {\r\n        const publicAccess = await axios.get(\r\n          `${PORT}/api/users/${userLoginInfo.username}/rooms`\r\n        );\r\n        const roomsJoinedList = publicAccess.data.roomsJoined;\r\n        const isInJoinedList = roomsJoinedList.find(\r\n          (roomToFind) => parseInt(roomData.room) === parseInt(roomToFind)\r\n        );\r\n        if (isInJoinedList) {\r\n          setFollowing(true);\r\n        } else if (!isInJoinedList) {\r\n          setFollowing(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err + \"mainRoom in JoinRoom() function for public access\");\r\n      }\r\n    } \r\n    sessionStorage.setItem(\"lastRoom\", room.toString());\r\n    setMessageRecieved(messages.messageHistory);\r\n    if (messages.messageHistory.length <= 0) {\r\n      setRoomIsEmpty(true);\r\n    }\r\n  };\r\n  const roomNameChanger =(event)=>{\r\n    setSearchName(event.target.value)\r\n  }\r\n  const roomChanger = (event) => {\r\n    setRoom(event.target.value); \r\n  };\r\n  const handleJoinRoomBtn = async () => {\r\n    const addTheRoom = await addRoom(\r\n      userLoginInfo.username,\r\n      room,\r\n      roomData.room_name\r\n    );\r\n    if (addTheRoom) {\r\n      setJoinedListResponse(addTheRoom);\r\n      if(addTheRoom === 'User Joined the room successfully.'){}\r\n      setFollowing(true);\r\n      return;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleRemoveRoomBtn = async () => {\r\n    const removeFromList = await removeRoom(\r\n      userLoginInfo.username,\r\n      room,\r\n      roomData.room_name\r\n    );\r\n    if (removeFromList) {\r\n      setJoinedListResponse(removeFromList);\r\n      setFollowing(false);\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\nconst checkList = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.PORT}/api/users/${userLoginInfo.username}/rooms`\r\n    );\r\n    const publicAccess = response.data.roomsJoined;\r\n    const listContainsRoom = publicAccess.find(\r\n      (roomData) => parseInt(roomData.room) === parseInt(room)\r\n    );\r\n\r\n    if (listContainsRoom) {\r\n      \r\n      setFollowing(true);\r\n    } else {\r\n      setFollowing(false);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in checkList:\", error);\r\n    // Handle the error as needed\r\n  }\r\n};\r\n\r\n  const sendMessageFunc = () => {\r\n    setClicked(true);\r\n    setTimeout(() => {\r\n      setClicked(false);\r\n    }, 800);\r\n    if (message === \"\") {\r\n      return;\r\n    }\r\n    const data = {\r\n      message,\r\n      room,\r\n      timestamp: getCurrentTime(),\r\n      username: userLoginInfo.username,\r\n      sentBy: userLoginInfo.username,\r\n      imageUrl: sessionImage ? sessionImage : userLoginInfo.imageUrl,\r\n      cloudinary_id: sessionCloudinary_id\r\n        ? sessionCloudinary_id\r\n        : userLoginInfo.cloudinary_id,\r\n    };\r\n    socket.emit(\"send_message\", data);\r\n    setMessageRecieved((prev) => [...prev, data]);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  // const deleteRoom = () => {\r\n  //   setMainAccess(true);\r\n  //   socket.emit(\"deleteRoom\", { room, username: userLoginInfo.username });\r\n  //   socket.off(\"join_room\", room);\r\n  //   navigate(\"/currentServers\");\r\n  // };\r\n\r\n  const leaveRoom = () => {\r\n    socket.emit(\"leaveroom\", room);\r\n    socket.disconnect();\r\n    navigate(\"/currentservers\");\r\n  };\r\n  useEffect(() => {\r\n    // Handle socket connection\r\n\r\n    if (!socket) {\r\n      setSocket(\r\n        io.connect(`${process.env.PORT}`, {\r\n          reconnection: true,\r\n          reconnectionAttempts: 20,\r\n          reconnectionDelay: 2000,\r\n        })\r\n      );\r\n      return setMainAccess(true);\r\n    }\r\n    checkList();\r\n    const handleSocketConnect = async () => {\r\n      const fetchRoomHistoryData = async () => {\r\n        const data = await loadRoomHistory(room);\r\n        setMessageRecieved(data.messageHistory);\r\n        setSocketConnected(true);\r\n      };\r\n      await fetchRoomHistoryData();\r\n    };\r\n\r\n    // Initialize socket if not already initialized\r\n\r\n    // Auto join room if main access is true\r\n    if (mainAccess === true) {\r\n      joinRoom();\r\n\r\n      setMainAccess(false);\r\n    }\r\n\r\n    // Socket event handlers\r\n    socket.on(\"connect\", handleSocketConnect);\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      setSocketConnected(false);\r\n      setMainAccess(true);\r\n    });\r\n     socket.on(\"receive_data\", async (roomFoundData) => {\r\n       setRoomData(roomFoundData);\r\n       setRoom(roomFoundData.room_number);\r\n     });\r\n    socket.on(\"receive_message\", async (data) => {\r\n      if (data.room !== room) return;\r\n      setTyping(false);\r\n      const newData = {\r\n        message: data.message,\r\n        username: data.sentBy,\r\n        timestamp: getCurrentTime(),\r\n        imageUrl: data.imageUrl,\r\n        cloudinary_id: data.cloudinary_id,\r\n      };\r\n\r\n      setMessageRecieved((prev) => [...prev, newData]);\r\n      await loadRoomHistory(data.room);\r\n    });\r\n\r\n    socket.on(\"sender_is_typing\", (data) => {\r\n      currentTyper.current = data.toString();\r\n      clearTimeout(typingTimeoutId.current);\r\n      setTyping(true);\r\n      typingTimeoutId.current = setTimeout(() => {\r\n        setTyping(false);\r\n      }, 4000);\r\n    });\r\n    // Cleanup functions\r\n    return () => {\r\n      socket.off(\"join_room\", joinRoom);\r\n      socket.off(\"receive_message\");\r\n      socket.off(\"disconnect\");\r\n      socket.off(\"sender_is_typing\", useIsTyping);\r\n      socket.off(\"receiveData\",joinRoom);\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [socket, messageRecieved, isSocketConnected, typing, room,]);\r\n  \r\n  useEffect(() => {\r\n    if (messagesStartRef.current) {\r\n      messagesStartRef.current.scrollTop =\r\n        messagesStartRef.current.scrollHeight;\r\n    }\r\n  }, [messageRecieved, typing]);\r\n  useEffect(() => {\r\n    if (joinedListResponse === \"room was removed successfully\") {\r\n      return setFollowing(false);\r\n    } else if (joinedListResponse === \"User joined the room successfully.\") {\r\n      return setFollowing(true);\r\n    }else if(joinedListResponse === ''){\r\n      checkList();\r\n    }\r\n    if(joinedListResponse === 'User has already joined this room.'){\r\n      setFollowing(true)\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [following, joinedListResponse]);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        roomChanger={roomChanger}\r\n        room={room ? room : 1}\r\n        joinRoom={joinRoom}\r\n        roomNameChanger={roomNameChanger}\r\n      />\r\n      <div className=\"room-wrapper-main-room\">\r\n        <div className={\"all-messages\"} ref={messagesStartRef}>\r\n          <div className=\"room_name\">\r\n            <h2 style={{textTransform:'capitalize'}}>\r\n              {lastRoom\r\n                ? roomData.room_name\r\n                : String.fromCodePoint(0x1f449) +\r\n                  lastRoom +\r\n                  \" No Existing Room\" +\r\n                  String.fromCodePoint(0x1f448)}\r\n            </h2>\r\n          </div>\r\n          {isPrivateRoom && (\r\n            <PrivateRoomAccess\r\n              style={{textTransform:'capitalize'}}\r\n              roomData={roomData}\r\n              setIsPrivateRoom={setIsPrivateRoom}\r\n            />\r\n          )}\r\n          {messageRecieved.length > 0 &&\r\n            !isPrivateRoom &&\r\n            messageRecieved.map((msg, index) => {\r\n              const timestampParts = msg.timestamp.split(\" \");\r\n              const datePart = timestampParts[0];\r\n              const timePart = timestampParts[1] + \" \" + timestampParts[2];\r\n              if (msg.sentBy === userLoginInfo.username) {\r\n                // Message sent by current user\r\n                let userLoggedIn = \"@\" + userLoginInfo.username.toUpperCase();\r\n                //BLUE USER MESSAGE\r\n                return (\r\n                  <div key={index} className={\"messagesContainer\"}>\r\n                    <div className={\"container blue\"}>\r\n                      <div className={\"message-timestamp-left\"}>\r\n                        {index !== 0 && (\r\n                          <p>\r\n                            {datePart}\r\n                            <br />\r\n                            {timePart}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                      <div className={\"message-blue\"}>\r\n                        <img\r\n                          src={\r\n                            userLoginInfo.imageUrl ||\r\n                            userLoginInfo.cloudinary_id\r\n                          }\r\n                          loading=\"lazy\"\r\n                          className={\"user-profile-pic blue\"}\r\n                          alt=\"Profile-Pic\"\r\n                          onClick={() =>\r\n                            navigate(`/profile/${userLoginInfo.username}`)\r\n                          }\r\n                        />\r\n                        <Message msg={msg}/>\r\n                      </div>\r\n                      <p className={\"user\"}>{userLoggedIn}</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                // GREEN USER MESSAGE\r\n                return (\r\n                  <div key={index} className={\"messagesContainer\"}>\r\n                    <div className={\"container green\"}>\r\n                      <div className={\"message-timestamp-right\"}>\r\n                        <p>\r\n                          {datePart}\r\n                          <br />\r\n                          {index !== 0 && timePart}\r\n                        </p>\r\n                      </div>\r\n                      <div className={\"message-green\"}>\r\n                        <img\r\n                          src={msg.imageUrl || msg.cloudinary_id}\r\n                          loading=\"lazy\"\r\n                          className={\"user-profile-pic green\"}\r\n                          alt=\"Profile-Pic\"\r\n                          onClick={() => navigate(`/profile/${msg.sentBy}`)}\r\n                        />\r\n                        <Message msg={msg}/>\r\n                        <p className={\"user green\"}>\r\n                          {msg.sentBy\r\n                            ? \"@\" + msg.sentBy.toUpperCase()\r\n                            : \"@\" + msg.username.toUpperCase()}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          {roomIsEmpty && navigate(`/createroom/${room}`)}\r\n          {typing === true && <TypingComp typer={currentTyper.current} />}\r\n        </div>\r\n     \r\n        {isPrivateRoom && (\r\n          <div className={\"helper_tools_wrapper\"}>\r\n            <button id={\"leave-room-btn\"} onClick={leaveRoom}>\r\n              <ReplyRoundedIcon id={\"back-button\"} />\r\n              Chat-Hubs\r\n            </button>\r\n          </div>\r\n        )}\r\n        {!isPrivateRoom && (\r\n          <>\r\n            <div className=\"send-input-wrapper\">\r\n              <input\r\n                placeholder={\"Message...\"}\r\n                id={\"send_message_input\"}\r\n                value={message}\r\n                onChange={(event) => {\r\n                  setMessage(event.target.value);\r\n                  handleIsTyping(event);\r\n                }}\r\n                maxLength=\"255\"\r\n              />\r\n              <button\r\n                className={`sendMsgBtn ${clicked ? \"open\" : \"\"}`}\r\n                onClick={sendMessageFunc}>\r\n                Send\r\n                <img\r\n                  src={sendIcon}\r\n                  className={` ${clicked ? \"clicked\" : \"\"}`}\r\n                  alt={\"icon-for-send\"}></img>\r\n              </button>\r\n            </div>\r\n            <div className={\"helper_tools_wrapper\"}>\r\n              <button id={\"leave-room-btn\"} onClick={leaveRoom}>\r\n                <ReplyRoundedIcon id={\"back-button\"} />\r\n                Chat-Hubs\r\n              </button>\r\n              {!following && (\r\n                <button\r\n                  className={\"subscribe_to_room\"}\r\n                  onClick={() => handleJoinRoomBtn()}>\r\n                  <AddBoxOutlinedIcon id={\"subscribe_btn\"} />\r\n                  Subscribe\r\n                </button>\r\n              )}\r\n              {following && (\r\n                <button\r\n                  className={\"subscribe_to_room _joined\"}\r\n                  onClick={() => handleRemoveRoomBtn()}>\r\n                  <IndeterminateCheckBoxOutlinedIcon id={\"unsubscribe_icon\"} />\r\n                  Unsubscribe\r\n                </button>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {}\r\n      <>\r\n        <div className={\"status_container\"}>\r\n          <h3 style={{ color: \"white\" }}>Status :</h3>\r\n          <button\r\n            type=\"button\"\r\n            className={\"statusBtn\"}\r\n            onClick={() => {\r\n              joinRoom();\r\n            }}\r\n            style={\r\n              isSocketConnected\r\n                ? { backgroundColor: \"#323232\" }\r\n                : { backgroundColor: \"red\", color: \"#3691F0\" }\r\n            }>\r\n            {isSocketConnected && \"Connected\"}\r\n            {!isSocketConnected && \"DISCONNECTED\"}\r\n          </button>\r\n        </div>\r\n      </>\r\n      {/* <div className=\"leave-delete-button\">\r\n        <button onClick={deleteRoom}>Delete Room</button>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\nexport default MainRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}