{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanner\\\\Desktop\\\\Chatty-Chatter\\\\Chatty_Chatter\\\\Client\\\\src\\\\components\\\\Utility-mainRoom\\\\getTime.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getCurrentTime = () => {\n  const date = new Date();\n  let year = String(date.getFullYear());\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  let hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? String(hours).padStart(2, \"0\") : \"12\"; // Convert to string and pad\n\n  const strTime = `${month}/${year - 2000} ${hours}:${minutes} ${ampm}`;\n  return strTime;\n};\nconst getCurrentTimeJSX = () => {\n  const date = new Date();\n  let year = String(date.getFullYear());\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  let hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? String(hours).padStart(2, \"0\") : \"12\"; // Convert to string and pad\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [month, \"/\", year - 2000, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }, this), \" \", hours, \":\", minutes, \" \", ampm]\n  }, void 0, true);\n};\nexport { getCurrentTimeJSX, getCurrentTime };\nexport default getCurrentTime;","map":{"version":3,"names":["getCurrentTime","date","Date","year","String","getFullYear","month","getMonth","padStart","hours","getHours","minutes","getMinutes","ampm","strTime","getCurrentTimeJSX","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Tanner/Desktop/Chatty-Chatter/Chatty_Chatter/Client/src/components/Utility-mainRoom/getTime.js"],"sourcesContent":["const getCurrentTime = () => {\r\n  const date = new Date();\r\n  let year = String(date.getFullYear());\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  let hours = String(date.getHours()).padStart(2, \"0\");\r\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n  hours = hours % 12;\r\n  hours = hours ? String(hours).padStart(2, \"0\") : \"12\"; // Convert to string and pad\r\n\r\n  const strTime = `${month}/${year - 2000} ${hours}:${minutes} ${ampm}`;\r\n  return strTime;\r\n};\r\n\r\nconst getCurrentTimeJSX = () => {\r\n  const date = new Date();\r\n  let year = String(date.getFullYear());\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  let hours = String(date.getHours()).padStart(2, \"0\");\r\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n  const ampm = hours >= 12 ? \"pm\" : \"am\";\r\n  hours = hours % 12;\r\n  hours = hours ? String(hours).padStart(2, \"0\") : \"12\"; // Convert to string and pad\r\n\r\n  return (\r\n    <>\r\n      {month}/{year - 2000} <br /> {hours}:{minutes} {ampm}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { getCurrentTimeJSX, getCurrentTime };\r\nexport default getCurrentTime;\r\n"],"mappings":";;;AAAA,MAAMA,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,IAAIC,IAAI,GAAGC,MAAM,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;EACrC,MAAMC,KAAK,GAAGF,MAAM,CAACH,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,IAAIC,KAAK,GAAGL,MAAM,CAACH,IAAI,CAACS,QAAQ,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACpD,MAAMG,OAAO,GAAGP,MAAM,CAACH,IAAI,CAACW,UAAU,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAMK,IAAI,GAAGJ,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;EACtCA,KAAK,GAAGA,KAAK,GAAG,EAAE;EAClBA,KAAK,GAAGA,KAAK,GAAGL,MAAM,CAACK,KAAK,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;;EAEvD,MAAMM,OAAO,GAAI,GAAER,KAAM,IAAGH,IAAI,GAAG,IAAK,IAAGM,KAAM,IAAGE,OAAQ,IAAGE,IAAK,EAAC;EACrE,OAAOC,OAAO;AAChB,CAAC;AAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMd,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,IAAIC,IAAI,GAAGC,MAAM,CAACH,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC;EACrC,MAAMC,KAAK,GAAGF,MAAM,CAACH,IAAI,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,IAAIC,KAAK,GAAGL,MAAM,CAACH,IAAI,CAACS,QAAQ,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACpD,MAAMG,OAAO,GAAGP,MAAM,CAACH,IAAI,CAACW,UAAU,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAMK,IAAI,GAAGJ,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;EACtCA,KAAK,GAAGA,KAAK,GAAG,EAAE;EAClBA,KAAK,GAAGA,KAAK,GAAGL,MAAM,CAACK,KAAK,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;;EAEvD,oBACEQ,OAAA,CAAAC,SAAA;IAAAC,QAAA,GACGZ,KAAK,EAAC,GAAC,EAACH,IAAI,GAAG,IAAI,EAAC,GAAC,eAAAa,OAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,EAACb,KAAK,EAAC,GAAC,EAACE,OAAO,EAAC,GAAC,EAACE,IAAI;EAAA,eACpD,CAAC;AAEP,CAAC;AAED,SAASE,iBAAiB,EAAEf,cAAc;AAC1C,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}