{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nconst useJoinedList = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [joinedListResponse, setJoinedListResponse] = useState('');\n  const PORT = process.env.REACT_APP_PORT;\n  const checkJoinedRoomList = async (username, roomToCheck) => {\n    try {\n      const response = await axios.get(`/checkUsersJoinedList`, {\n        params: {\n          username,\n          roomToCheck\n        } // Use params to send data in the request\n      });\n\n      setJoinedListResponse(response.data.message);\n      return response.data.message;\n    } catch (err) {\n      setError(\"found error in useJoinedList\" + err);\n      return null; // or handle the error in an appropriate way\n    }\n  };\n\n  const checkJoinedRoomListOnLoad = async (username, roomToCheck, roomNumber) => {\n    try {\n      const response = await axios.get(`/checkUsersJoinedListOnLoad`, {\n        params: {\n          username,\n          roomToCheck\n        } // Use params to send data in the request\n      });\n\n      setJoinedListResponse(response.data.message);\n      return response.data.message;\n    } catch (err) {\n      setError(\"found error in useJoinedList\" + err);\n      return null; // or handle the error in an appropriate way\n    }\n  };\n\n  const addRoom = async (username, roomNumber, roomName) => {\n    // console.log(username)\n    // console.log(roomNumber)\n    // console.log(roomName)\n    try {\n      const sendData = await axios.post(`/addRoomToUser`, {\n        username,\n        roomNumber,\n        roomName\n      });\n      const response = sendData.data;\n      if (response.message) {\n        setJoinedListResponse(response.message);\n      } else if (response.room) {\n        console.log(\"did not receive a message body in return.\");\n      }\n      console.log(joinedListResponse);\n      return;\n    } catch (err) {\n      setError(\"Error in AddRoom Helper: \" + err);\n    }\n  };\n  const removeRoom = async (username, roomNumber, roomName) => {\n    try {\n      const sendData = await axios.post(`/removeJoinedRoom`, {\n        username,\n        roomNumber,\n        roomName\n      });\n      const response = await sendData.data.message;\n      setJoinedListResponse(response);\n      return response;\n    } catch (err) {\n      setError(\"Error in removeRoom Helper: \" + err);\n    }\n  };\n  useEffect(() => {\n    console.log(joinedListResponse);\n    console.log(error);\n  }, [joinedListResponse, error]);\n  return {\n    addRoom,\n    error,\n    removeRoom,\n    setJoinedListResponse,\n    joinedListResponse,\n    checkJoinedRoomList,\n    checkJoinedRoomListOnLoad\n  };\n};\n_s(useJoinedList, \"MnVYb7d/O5Q7+vERm4ijkLE1w6s=\");\nexport default useJoinedList;","map":{"version":3,"names":["axios","useState","useEffect","useJoinedList","_s","error","setError","joinedListResponse","setJoinedListResponse","PORT","process","env","REACT_APP_PORT","checkJoinedRoomList","username","roomToCheck","response","get","params","data","message","err","checkJoinedRoomListOnLoad","roomNumber","addRoom","roomName","sendData","post","room","console","log","removeRoom"],"sources":["C:/Users/Tanner/Desktop/Chatty-Chatter/Chatty_Chatter/Client/src/components/Utility-mainRoom/useJoinedList.js"],"sourcesContent":["import axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst useJoinedList =()=>{\r\n\r\nconst [error,setError] = useState(null);\r\nconst [joinedListResponse, setJoinedListResponse ] = useState('')\r\nconst PORT = process.env.REACT_APP_PORT;\r\n\r\n   const checkJoinedRoomList = async (username, roomToCheck) => {\r\n     try {\r\n       const response = await axios.get(`/checkUsersJoinedList`, {\r\n         params: { username, roomToCheck }, // Use params to send data in the request\r\n       });\r\n       setJoinedListResponse(response.data.message)\r\n       return response.data.message;\r\n     } catch (err) {\r\n       setError(\"found error in useJoinedList\" + err);\r\n       return null; // or handle the error in an appropriate way\r\n     }\r\n   };\r\n   const checkJoinedRoomListOnLoad = async (username, roomToCheck,roomNumber) => {\r\n     try {\r\n       const response = await axios.get(`/checkUsersJoinedListOnLoad`, {\r\n         params: { username, roomToCheck }, // Use params to send data in the request\r\n       });\r\n       setJoinedListResponse(response.data.message);\r\n       return response.data.message;\r\n     } catch (err) {\r\n       setError(\"found error in useJoinedList\" + err);\r\n       return null; // or handle the error in an appropriate way\r\n     }\r\n   };\r\n    const addRoom = async (username, roomNumber, roomName) =>{\r\n      // console.log(username)\r\n      // console.log(roomNumber)\r\n      // console.log(roomName)\r\n        try{\r\n            const sendData = await axios.post(`/addRoomToUser`,{\r\n                    username, \r\n                    roomNumber, \r\n                    roomName,\r\n                });\r\n            const response = sendData.data\r\n            if(response.message){\r\n\r\n                setJoinedListResponse(response.message);\r\n            }else if(response.room){\r\n                console.log(\"did not receive a message body in return.\");\r\n                \r\n            }\r\n            console.log(joinedListResponse)\r\n            return \r\n        }catch(err){\r\n             setError(\"Error in AddRoom Helper: \" + err);\r\n        }\r\n    }\r\n    const removeRoom = async(username, roomNumber, roomName) =>{\r\n     \r\n        try{\r\n            const sendData = await axios.post(`/removeJoinedRoom`,\r\n            {\r\n                username,\r\n                roomNumber,\r\n                roomName,\r\n            });\r\n            const response = await sendData.data.message;\r\n          \r\n            setJoinedListResponse(response)\r\n            return response;\r\n        }catch(err){\r\n             setError(\"Error in removeRoom Helper: \" + err);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n\r\n        console.log(joinedListResponse);\r\n        console.log(error)\r\n    },[joinedListResponse, error])\r\n\r\n    return {\r\n      addRoom,\r\n      error,\r\n      removeRoom,\r\n      setJoinedListResponse,\r\n      joinedListResponse,\r\n      checkJoinedRoomList,\r\n      checkJoinedRoomListOnLoad,\r\n    };\r\n}\r\nexport default useJoinedList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}