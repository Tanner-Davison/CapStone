{"ast":null,"code":"import{useState,useEffect}from\"react\";import\"./App.css\";import MainRoom from\"./components/MainRoom\";import Login from\"./components/login/Login\";import CurrentServers from\"./components/currentServers/CurrentServers\";import{LoginContext}from\"./components/contexts/LoginContext\";import Profile from\"./components/Profile/Profile\";import CreateRoom from\"./components/Utility-mainRoom/CreateRoom\";import{createBrowserRouter,createRoutesFromElements,Route,RouterProvider}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const router=createBrowserRouter(createRoutesFromElements(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/currentservers\",element:/*#__PURE__*/_jsx(CurrentServers,{})}),/*#__PURE__*/_jsx(Route,{path:\"/chatroom/:room\",element:/*#__PURE__*/_jsx(MainRoom,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile/:username\",element:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Route,{path:\"/createroom/:room\",element:/*#__PURE__*/_jsx(CreateRoom,{})})]})));const[mainAccess,setMainAccess]=useState(false);const[loginPortalToggle,setLoginPortalToggle]=useState(true);const[socket,setSocket]=useState(null);const[userLoginInfo,setUserLoginInfo]=useState({username:\"\",password:\"\",imageUrl:\"\",cloudinary_id:\"\"});const createUserInfo=async()=>{const userLoggedIn=sessionStorage.getItem(\"active_user\");const user=JSON.parse(userLoggedIn);if(user){const loggedInUser={username:user.username,password:user.password,imageUrl:user.profilePic.url||\"https://m.media-amazon.com/images/I/71zTE0u2iXL._AC_UY1000_.jpg\",cloudinary_id:user.profilePic.cloudinary_id||\"https://m.media-amazon.com/images/I/71zTE0u2iXL._AC_UY1000_.jpg\"};setUserLoginInfo(loggedInUser);}else{const newUserInfo={username:JSON.parse(sessionStorage.getItem(\"username\")),password:JSON.parse(sessionStorage.getItem(\"password\")),imageUrl:sessionStorage.getItem(\"image-url\"),cloudinary_id:sessionStorage.getItem(\"cloudinary_id\")};setUserLoginInfo(newUserInfo);}};useEffect(()=>{if(userLoginInfo.username===\"\"){createUserInfo();}// eslint-disable-next-line\n},[userLoginInfo]);return/*#__PURE__*/_jsx(LoginContext.Provider,{value:{userLoginInfo,setUserLoginInfo,mainAccess,setMainAccess,loginPortalToggle,setLoginPortalToggle,socket,setSocket,createUserInfo},children:/*#__PURE__*/_jsx(RouterProvider,{router:router})});}export default App;","map":{"version":3,"names":["useState","useEffect","MainRoom","Login","CurrentServers","LoginContext","Profile","CreateRoom","createBrowserRouter","createRoutesFromElements","Route","RouterProvider","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","router","children","path","element","mainAccess","setMainAccess","loginPortalToggle","setLoginPortalToggle","socket","setSocket","userLoginInfo","setUserLoginInfo","username","password","imageUrl","cloudinary_id","createUserInfo","userLoggedIn","sessionStorage","getItem","user","JSON","parse","loggedInUser","profilePic","url","newUserInfo","Provider","value"],"sources":["C:/Users/Tanner/Desktop/Chatty-Chatter/Chatty_Chatter/Client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport MainRoom from \"./components/MainRoom\";\r\nimport Login from \"./components/login/Login\";\r\nimport CurrentServers from \"./components/currentServers/CurrentServers\";\r\nimport { LoginContext } from \"./components/contexts/LoginContext\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport CreateRoom from \"./components/Utility-mainRoom/CreateRoom\";\r\nimport {\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  Route,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const router = createBrowserRouter(\r\n    createRoutesFromElements(\r\n      <>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/currentservers\" element={<CurrentServers />} />\r\n        <Route path=\"/chatroom/:room\" element={<MainRoom />} />\r\n        <Route path=\"/profile/:username\" element={<Profile />} />\r\n        <Route path=\"/createroom/:room\" element={<CreateRoom />} />\r\n      </>\r\n    )\r\n  );\r\n  const [mainAccess, setMainAccess] = useState(false);\r\n  const [loginPortalToggle, setLoginPortalToggle] = useState(true);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const [userLoginInfo, setUserLoginInfo] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    imageUrl: \"\",\r\n    cloudinary_id: \"\",\r\n  });\r\n\r\n  const createUserInfo = async () => {\r\n    const userLoggedIn = sessionStorage.getItem(\"active_user\");\r\n    const user = JSON.parse(userLoggedIn);\r\n    if (user) {\r\n      const loggedInUser = {\r\n        username: user.username,\r\n        password: user.password,\r\n        imageUrl:\r\n          user.profilePic.url ||\r\n          \"https://m.media-amazon.com/images/I/71zTE0u2iXL._AC_UY1000_.jpg\",\r\n        cloudinary_id:\r\n          user.profilePic.cloudinary_id ||\r\n          \"https://m.media-amazon.com/images/I/71zTE0u2iXL._AC_UY1000_.jpg\",\r\n      };\r\n      setUserLoginInfo(loggedInUser);\r\n    } else {\r\n      const newUserInfo = {\r\n        username: JSON.parse(sessionStorage.getItem(\"username\")),\r\n        password: JSON.parse(sessionStorage.getItem(\"password\")),\r\n        imageUrl: sessionStorage.getItem(\"image-url\"),\r\n        cloudinary_id: sessionStorage.getItem(\"cloudinary_id\"),\r\n      };\r\n      setUserLoginInfo(newUserInfo);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (userLoginInfo.username === \"\") {\r\n      createUserInfo();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [userLoginInfo]);\r\n\r\n  return (\r\n    <LoginContext.Provider\r\n      value={{\r\n        userLoginInfo,\r\n        setUserLoginInfo,\r\n        mainAccess,\r\n        setMainAccess,\r\n        loginPortalToggle,\r\n        setLoginPortalToggle,\r\n        socket,\r\n        setSocket,\r\n        createUserInfo,\r\n      }}>\r\n      <RouterProvider router={router}></RouterProvider>\r\n    </LoginContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}