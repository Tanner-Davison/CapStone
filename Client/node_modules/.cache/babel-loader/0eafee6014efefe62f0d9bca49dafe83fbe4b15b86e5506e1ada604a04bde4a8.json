{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanner\\\\Desktop\\\\Chatty-Chatter\\\\Chatty_Chatter\\\\Client\\\\src\\\\components\\\\Utility-mainRoom\\\\PrivateRoomAccess.js\",\n  _s = $RefreshSig$();\nimport styles from \"./PrivateRoomAccess.module.css\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { useState, useContext } from \"react\";\nimport { LoginContext } from \"../contexts/LoginContext\";\nimport axios from 'axios';\nimport Button from \"@mui/material/Button\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoomAccess = ({\n  roomData,\n  setIsPrivateRoom\n}) => {\n  _s();\n  const {\n    setMainAccess,\n    setSocket,\n    userLoginInfo\n  } = useContext(LoginContext);\n  const PORT = process.env.REACT_APP_API_URL || 5000;\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const handlePasswordSubmit = async () => {\n    if (password === null || roomData.private_room_password === null || roomData.room_number === null) {\n      return setIsError(true);\n    }\n    axios.get(`/password_check/`, {\n      params: {\n        password: password,\n        room: roomData.room_number,\n        roomPassword: roomData.private_room_password,\n        roomName: roomData.room_name,\n        username: userLoginInfo.username\n      }\n    }).then(res => {\n      if (res.data.message === 'success') {\n        console.log('Access Granted');\n        setIsError(false);\n        setIsPrivateRoom(false);\n        handlLoginSuccess(roomData.room_number);\n      } else {\n        console.log('we have an error');\n      }\n    }).catch(err => {\n      if (err.response && err.response.status === 404) {\n        setIsError(true);\n      } else {\n        console.log('an error occured in privateRoomAccess catch block');\n      }\n    });\n  };\n  const handlLoginSuccess = (room, event) => {\n    setMainAccess(true);\n    setSocket(io.connect(``), {\n      reconnection: true,\n      reconnectionAttempts: 20,\n      reconnectionDelay: 2000\n    });\n    sessionStorage.setItem(\"lastRoom\", room);\n  };\n  const handleOnChange = e => {\n    if (password === '' || null) {\n      setIsError(false);\n    }\n    setPassword(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.private_room_main_wrapper} ${isError ? styles.errorClass : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: styles.align_self,\n      children: \"Password Required \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      id: styles.password_input,\n      htmlFor: \"passwordInput\",\n      children: [isPasswordVisible ? /*#__PURE__*/_jsxDEV(Visibility, {\n        id: styles.eye_ball,\n        onClick: () => setIsPasswordVisible(false),\n        style: isError ? {\n          color: \"crimson\"\n        } : {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {\n        id: styles.eye_ball,\n        onClick: () => setIsPasswordVisible(true),\n        style: isError ? {\n          color: \"maroon\"\n        } : {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: isPasswordVisible ? \"text\" : \"password\",\n        onChange: e => handleOnChange(e),\n        placeholder: \" enter password\",\n        id: \"passwordInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), !isError && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        id: styles.submit_button,\n        onClick: handlePasswordSubmit,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), isError && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        id: styles.submit_button,\n        color: \"error\",\n        onClick: handlePasswordSubmit,\n        children: \"Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateRoomAccess, \"cuaYpnPlwkIXxGAH+VVEPPJl1H4=\");\n_c = PrivateRoomAccess;\nexport default PrivateRoomAccess;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoomAccess\");","map":{"version":3,"names":["styles","Visibility","VisibilityOff","useState","useContext","LoginContext","axios","Button","io","jsxDEV","_jsxDEV","PrivateRoomAccess","roomData","setIsPrivateRoom","_s","setMainAccess","setSocket","userLoginInfo","PORT","process","env","REACT_APP_API_URL","isPasswordVisible","setIsPasswordVisible","password","setPassword","isError","setIsError","handlePasswordSubmit","private_room_password","room_number","get","params","room","roomPassword","roomName","room_name","username","then","res","data","message","console","log","handlLoginSuccess","catch","err","response","status","event","connect","reconnection","reconnectionAttempts","reconnectionDelay","sessionStorage","setItem","handleOnChange","e","target","value","className","private_room_main_wrapper","errorClass","children","id","align_self","fileName","_jsxFileName","lineNumber","columnNumber","password_input","htmlFor","eye_ball","onClick","style","color","type","onChange","placeholder","variant","submit_button","_c","$RefreshReg$"],"sources":["C:/Users/Tanner/Desktop/Chatty-Chatter/Chatty_Chatter/Client/src/components/Utility-mainRoom/PrivateRoomAccess.js"],"sourcesContent":["import styles from \"./PrivateRoomAccess.module.css\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport { useState, useContext } from \"react\";\r\nimport { LoginContext } from \"../contexts/LoginContext\";\r\nimport axios from 'axios';\r\nimport Button from \"@mui/material/Button\";\r\nimport { io } from \"socket.io-client\";\r\nconst PrivateRoomAccess = ({roomData, setIsPrivateRoom}) => {\r\n\tconst { setMainAccess, setSocket, userLoginInfo } =\r\n\tuseContext(LoginContext);\r\n  const PORT = process.env.REACT_APP_API_URL || 5000;\r\n\r\n\tconst [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n\tconst [password, setPassword] = useState(\"\");\r\n    const [isError, setIsError] = useState(false)\r\n\r\n    const handlePasswordSubmit = async() => {\r\n       \r\n       if(password === null || roomData.private_room_password=== null || roomData.room_number=== null){\r\n\t\treturn setIsError(true)\r\n\t   }\r\n        axios.get(`/password_check/`, {\r\n            params: {\r\n                password: password,\r\n                room: roomData.room_number,\r\n                roomPassword: roomData.private_room_password,\r\n\t\t\t\troomName: roomData.room_name,\r\n\t\t\t\tusername: userLoginInfo.username,\r\n                    }\r\n            })\r\n            .then((res) => {\r\n                if (res.data.message === 'success') {\r\n                    console.log('Access Granted')\r\n                    setIsError(false)\r\n                    setIsPrivateRoom(false)\r\n\t\t\t\t\thandlLoginSuccess(roomData.room_number)\r\n                } else {\r\n                    console.log('we have an error')\r\n                }\r\n            }).catch((err) => {\r\n                if (err.response && err.response.status === 404) {\r\n                    setIsError(true)\r\n                } else {\r\n                    console.log('an error occured in privateRoomAccess catch block')\r\n                }\r\n            })\r\n        \r\n        }\r\n\t\t const handlLoginSuccess = (room,event) => {\r\n      \r\n       setMainAccess(true);\r\n       setSocket(io.connect(``), {\r\n         reconnection: true,\r\n         reconnectionAttempts: 20,\r\n         reconnectionDelay: 2000,\r\n       });\r\n       sessionStorage.setItem(\"lastRoom\", room);\r\n     }; \r\n\t const handleOnChange =(e)=>{\r\n\t\tif(password === '' || null){\r\n\t\t\tsetIsError(false)\r\n\t\t}\r\n\t\tsetPassword(e.target.value)\r\n\t }\r\n\treturn (\r\n    <div\r\n      className={`${styles.private_room_main_wrapper} ${\r\n        isError ? styles.errorClass : \"\"\r\n      }`}>\r\n      <p id={styles.align_self}>Password Required </p>\r\n      <label id={styles.password_input} htmlFor={\"passwordInput\"}>\r\n        {isPasswordVisible ? (\r\n          <Visibility\r\n            id={styles.eye_ball}\r\n            onClick={() => setIsPasswordVisible(false)}\r\n            style={isError ? { color: \"crimson\" } : { color: \"white\" }}\r\n          />\r\n        ) : (\r\n          <VisibilityOff\r\n            id={styles.eye_ball}\r\n            onClick={() => setIsPasswordVisible(true)}\r\n            style={isError ? { color: \"maroon\" } : { color: \"white\" }}\r\n          />\r\n        )}\r\n\r\n        <input\r\n          type={isPasswordVisible ? \"text\" : \"password\"}\r\n          onChange={(e) => handleOnChange(e)}\r\n          placeholder=\" enter password\"\r\n          id={\"passwordInput\"}\r\n        />\r\n        {!isError && (\r\n          <Button\r\n            variant=\"outlined\"\r\n            id={styles.submit_button}\r\n            onClick={handlePasswordSubmit}>\r\n            Enter\r\n          </Button>\r\n        )}\r\n        {isError && (\r\n          <Button\r\n            variant=\"outlined\"\r\n            id={styles.submit_button}\r\n            color=\"error\"\r\n            onClick={handlePasswordSubmit}>\r\n            Invalid\r\n          </Button>\r\n        )}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nexport default PrivateRoomAccess;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}