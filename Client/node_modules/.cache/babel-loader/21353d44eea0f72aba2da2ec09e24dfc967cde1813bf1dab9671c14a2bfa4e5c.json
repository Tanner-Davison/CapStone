{"ast":null,"code":"import axios from\"axios\";import{useState,useEffect}from\"react\";const useJoinedList=()=>{const PORT=process.env.REACT_APP_API_URL||5000;const[error,setError]=useState(null);const[joinedListResponse,setJoinedListResponse]=useState(\"\");const checkJoinedRoomList=async(username,roomToCheck)=>{try{const response=await axios.get(`/checkUsersJoinedList`,{params:{username,roomToCheck}// Use params to send data in the request\n});setJoinedListResponse(response.data.message);return response.data.message;}catch(err){setError(\"found error in useJoinedList\"+err);return null;// or handle the error in an appropriate way\n}};const checkJoinedRoomListOnLoad=async(username,roomToCheck,roomNumber)=>{try{const response=await axios.get(`/checkUsersJoinedListOnLoad`,{params:{username,roomToCheck}// Use params to send data in the request\n});setJoinedListResponse(response.data.message);return response.data.message;}catch(err){setError(\"found error in useJoinedList\"+err);return null;// or handle the error in an appropriate way\n}};const addRoom=async(username,roomNumber,roomName)=>{// console.log(username)\n// console.log(roomNumber)\n// console.log(roomName)\ntry{const sendData=await axios.post(`/addRoomToUser`,{username,roomNumber,roomName});const response=sendData.data;if(response.message){setJoinedListResponse(response.message);}else if(response.room){console.log(\"did not receive a message body in return.\");}console.log(joinedListResponse);return;}catch(err){setError(\"Error in AddRoom Helper: \"+err);}};const removeRoom=async(username,roomNumber,roomName)=>{try{const sendData=await axios.post(`/removeJoinedRoom`,{username,roomNumber,roomName});const response=await sendData.data.message;setJoinedListResponse(response);return response;}catch(err){setError(\"Error in removeRoom Helper: \"+err);}};useEffect(()=>{console.log(joinedListResponse);console.log(error);},[joinedListResponse,error]);return{addRoom,error,removeRoom,setJoinedListResponse,joinedListResponse,checkJoinedRoomList,checkJoinedRoomListOnLoad};};export default useJoinedList;","map":{"version":3,"names":["axios","useState","useEffect","useJoinedList","PORT","process","env","REACT_APP_API_URL","error","setError","joinedListResponse","setJoinedListResponse","checkJoinedRoomList","username","roomToCheck","response","get","params","data","message","err","checkJoinedRoomListOnLoad","roomNumber","addRoom","roomName","sendData","post","room","console","log","removeRoom"],"sources":["C:/Users/Tanner/Desktop/Chatty-Chatter/Chatty_Chatter/Client/src/components/Utility-mainRoom/useJoinedList.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst useJoinedList = () => {\r\nconst PORT = process.env.REACT_APP_API_URL || 5000;\r\n\r\n  const [error, setError] = useState(null);\r\n  const [joinedListResponse, setJoinedListResponse] = useState(\"\");\r\n\r\n  const checkJoinedRoomList = async (username, roomToCheck) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `/checkUsersJoinedList`,\r\n        {\r\n          params: { username, roomToCheck }, // Use params to send data in the request\r\n        }\r\n      );\r\n      setJoinedListResponse(response.data.message);\r\n      return response.data.message;\r\n    } catch (err) {\r\n      setError(\"found error in useJoinedList\" + err);\r\n      return null; // or handle the error in an appropriate way\r\n    }\r\n  };\r\n  const checkJoinedRoomListOnLoad = async (\r\n    username,\r\n    roomToCheck,\r\n    roomNumber\r\n  ) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `/checkUsersJoinedListOnLoad`,\r\n        {\r\n          params: { username, roomToCheck }, // Use params to send data in the request\r\n        }\r\n      );\r\n      setJoinedListResponse(response.data.message);\r\n      return response.data.message;\r\n    } catch (err) {\r\n      setError(\"found error in useJoinedList\" + err);\r\n      return null; // or handle the error in an appropriate way\r\n    }\r\n  };\r\n  const addRoom = async (username, roomNumber, roomName) => {\r\n    // console.log(username)\r\n    // console.log(roomNumber)\r\n    // console.log(roomName)\r\n    try {\r\n      const sendData = await axios.post(\r\n        `/addRoomToUser`,\r\n        {\r\n          username,\r\n          roomNumber,\r\n          roomName,\r\n        }\r\n      );\r\n      const response = sendData.data;\r\n      if (response.message) {\r\n        setJoinedListResponse(response.message);\r\n      } else if (response.room) {\r\n        console.log(\"did not receive a message body in return.\");\r\n      }\r\n      console.log(joinedListResponse);\r\n      return;\r\n    } catch (err) {\r\n      setError(\"Error in AddRoom Helper: \" + err);\r\n    }\r\n  };\r\n  const removeRoom = async (username, roomNumber, roomName) => {\r\n    try {\r\n      const sendData = await axios.post(\r\n        `/removeJoinedRoom`,\r\n        {\r\n          username,\r\n          roomNumber,\r\n          roomName,\r\n        }\r\n      );\r\n      const response = await sendData.data.message;\r\n\r\n      setJoinedListResponse(response);\r\n      return response;\r\n    } catch (err) {\r\n      setError(\"Error in removeRoom Helper: \" + err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(joinedListResponse);\r\n    console.log(error);\r\n  }, [joinedListResponse, error]);\r\n\r\n  return {\r\n    addRoom,\r\n    error,\r\n    removeRoom,\r\n    setJoinedListResponse,\r\n    joinedListResponse,\r\n    checkJoinedRoomList,\r\n    checkJoinedRoomListOnLoad,\r\n  };\r\n};\r\nexport default useJoinedList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}