{"ast":null,"code":"import axios from'axios';import{useState,useEffect}from'react';const useJoinedList=()=>{const[error,setError]=useState(null);const[joinedListResponse,setJoinedListResponse]=useState('');const PORT=process.env.REACT_APP_PORT;const checkJoinedRoomList=async(username,roomToCheck)=>{try{const response=await axios.get(`/checkUsersJoinedList`,{params:{username,roomToCheck}// Use params to send data in the request\n});setJoinedListResponse(response.data.message);return response.data.message;}catch(err){setError(\"found error in useJoinedList\"+err);return null;// or handle the error in an appropriate way\n}};const checkJoinedRoomListOnLoad=async(username,roomToCheck,roomNumber)=>{try{const response=await axios.get(`/checkUsersJoinedListOnLoad`,{params:{username,roomToCheck}// Use params to send data in the request\n});setJoinedListResponse(response.data.message);return response.data.message;}catch(err){setError(\"found error in useJoinedList\"+err);return null;// or handle the error in an appropriate way\n}};const addRoom=async(username,roomNumber,roomName)=>{// console.log(username)\n// console.log(roomNumber)\n// console.log(roomName)\ntry{const sendData=await axios.post(`/addRoomToUser`,{username,roomNumber,roomName});const response=sendData.data;if(response.message){setJoinedListResponse(response.message);}else if(response.room){console.log(\"did not receive a message body in return.\");}console.log(joinedListResponse);return;}catch(err){setError(\"Error in AddRoom Helper: \"+err);}};const removeRoom=async(username,roomNumber,roomName)=>{try{const sendData=await axios.post(`/removeJoinedRoom`,{username,roomNumber,roomName});const response=await sendData.data.message;setJoinedListResponse(response);return response;}catch(err){setError(\"Error in removeRoom Helper: \"+err);}};useEffect(()=>{console.log(joinedListResponse);console.log(error);},[joinedListResponse,error]);return{addRoom,error,removeRoom,setJoinedListResponse,joinedListResponse,checkJoinedRoomList,checkJoinedRoomListOnLoad};};export default useJoinedList;","map":{"version":3,"names":["axios","useState","useEffect","useJoinedList","error","setError","joinedListResponse","setJoinedListResponse","PORT","process","env","REACT_APP_PORT","checkJoinedRoomList","username","roomToCheck","response","get","params","data","message","err","checkJoinedRoomListOnLoad","roomNumber","addRoom","roomName","sendData","post","room","console","log","removeRoom"],"sources":["C:/Users/Tanner/Desktop/Chatty-Chatter/Chatty_Chatter/Client/src/components/Utility-mainRoom/useJoinedList.js"],"sourcesContent":["import axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst useJoinedList =()=>{\r\n\r\nconst [error,setError] = useState(null);\r\nconst [joinedListResponse, setJoinedListResponse ] = useState('')\r\nconst PORT = process.env.REACT_APP_PORT;\r\n\r\n   const checkJoinedRoomList = async (username, roomToCheck) => {\r\n     try {\r\n       const response = await axios.get(`/checkUsersJoinedList`, {\r\n         params: { username, roomToCheck }, // Use params to send data in the request\r\n       });\r\n       setJoinedListResponse(response.data.message)\r\n       return response.data.message;\r\n     } catch (err) {\r\n       setError(\"found error in useJoinedList\" + err);\r\n       return null; // or handle the error in an appropriate way\r\n     }\r\n   };\r\n   const checkJoinedRoomListOnLoad = async (username, roomToCheck,roomNumber) => {\r\n     try {\r\n       const response = await axios.get(`/checkUsersJoinedListOnLoad`, {\r\n         params: { username, roomToCheck }, // Use params to send data in the request\r\n       });\r\n       setJoinedListResponse(response.data.message);\r\n       return response.data.message;\r\n     } catch (err) {\r\n       setError(\"found error in useJoinedList\" + err);\r\n       return null; // or handle the error in an appropriate way\r\n     }\r\n   };\r\n    const addRoom = async (username, roomNumber, roomName) =>{\r\n      // console.log(username)\r\n      // console.log(roomNumber)\r\n      // console.log(roomName)\r\n        try{\r\n            const sendData = await axios.post(`/addRoomToUser`,{\r\n                    username, \r\n                    roomNumber, \r\n                    roomName,\r\n                });\r\n            const response = sendData.data\r\n            if(response.message){\r\n\r\n                setJoinedListResponse(response.message);\r\n            }else if(response.room){\r\n                console.log(\"did not receive a message body in return.\");\r\n                \r\n            }\r\n            console.log(joinedListResponse)\r\n            return \r\n        }catch(err){\r\n             setError(\"Error in AddRoom Helper: \" + err);\r\n        }\r\n    }\r\n    const removeRoom = async(username, roomNumber, roomName) =>{\r\n     \r\n        try{\r\n            const sendData = await axios.post(`/removeJoinedRoom`,\r\n            {\r\n                username,\r\n                roomNumber,\r\n                roomName,\r\n            });\r\n            const response = await sendData.data.message;\r\n          \r\n            setJoinedListResponse(response)\r\n            return response;\r\n        }catch(err){\r\n             setError(\"Error in removeRoom Helper: \" + err);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n\r\n        console.log(joinedListResponse);\r\n        console.log(error)\r\n    },[joinedListResponse, error])\r\n\r\n    return {\r\n      addRoom,\r\n      error,\r\n      removeRoom,\r\n      setJoinedListResponse,\r\n      joinedListResponse,\r\n      checkJoinedRoomList,\r\n      checkJoinedRoomListOnLoad,\r\n    };\r\n}\r\nexport default useJoinedList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}