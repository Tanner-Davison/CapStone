{"ast":null,"code":"import React,{useContext,useEffect,useRef,useState}from\"react\";import AddBoxOutlinedIcon from\"@mui/icons-material/AddBoxOutlined\";import IndeterminateCheckBoxOutlinedIcon from\"@mui/icons-material/IndeterminateCheckBoxOutlined\";import ReplyRoundedIcon from\"@mui/icons-material/ReplyRounded\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import io from\"socket.io-client\";import\"../App.css\";import Header from\"./Header/Header\";import\"./MainRoom.css\";import{useIsTyping}from\"./Utility-mainRoom/IsTyping.js\";import PrivateRoomAccess from\"./Utility-mainRoom/PrivateRoomAccess.js\";import TypingComp from\"./Utility-mainRoom/TypingComp\";import getCurrentTime from\"./Utility-mainRoom/getTime\";import{loadRoomHistory}from\"./Utility-mainRoom/loadRoomHistory\";import sendIcon from\"./Utility-mainRoom/svgs/SendIcon.svg\";import useJoinedList from\"./Utility-mainRoom/useJoinedList.js\";import{LoginContext}from\"./contexts/LoginContext\";import Message from\"./Message.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const MainRoom=()=>{const{userLoginInfo,mainAccess,setMainAccess,socket,setSocket}=useContext(LoginContext);const[clicked,setClicked]=useState(false);const[message,setMessage]=useState(\"\");const[messageRecieved,setMessageRecieved]=useState([]);const[roomData,setRoomData]=useState([]);const lastRoom=sessionStorage.getItem(\"lastRoom\");const initialRoom=lastRoom?parseInt(lastRoom,10):1;const[room,setRoom]=useState(initialRoom);const[searchName,setSearchName]=useState('');const sessionImage=sessionStorage.getItem(\"image-url\");const sessionCloudinary_id=sessionStorage.getItem(\"cloudinary_id\");const messagesStartRef=useRef(null);const PORT=process.env.REACT_APP_PORT;const[roomIsEmpty,setRoomIsEmpty]=useState(false);const[isSocketConnected,setSocketConnected]=useState(false);const[isPrivateRoom,setIsPrivateRoom]=useState(false);const[typing,setTyping]=useState(false);const typingTimeoutId=useRef(null);const currentTyper=useRef(null);const{addRoom,error,joinedListResponse,setJoinedListResponse,removeRoom}=useJoinedList();const[following,setFollowing]=useState(null);const navigate=useNavigate();const handleIsTyping=useIsTyping(socket,userLoginInfo.username,room,typingTimeoutId);const getSearchResults=async()=>{try{const response=await axios.get(`/searchByNameFinder/${searchName}`);setMainAccess(true);setSearchName('');return response.data;}catch(error){console.error(\"Error in getSearchResults:\",error);// Handle the error (return a default value, show a message, etc.)\nreturn null;}};const joinRoom=async()=>{if(searchName!==''){const searchRoomData=await getSearchResults();if(searchRoomData){const stringRoom=searchRoomData.room_number;const stringMessages=searchRoomData.messageHistory;setRoom(stringRoom);setSearchName('');setMessageRecieved(stringMessages);return navigate(`/chatroom/${stringRoom}`);}}socket.emit(\"join_room\",{room,searchName,username:userLoginInfo.username,message});navigate(`/chatroom/${room}`);const messages=await loadRoomHistory(room);setRoomData(messages.allRoomData);if(messages.allRoomData.private_room){try{const privateAccessExist=await axios.get(`/api/users/${userLoginInfo.username}/rooms`);const response=privateAccessExist===null||privateAccessExist===void 0?void 0:privateAccessExist.data.roomsJoined;const listContainsRoom=response.find(roomData=>parseInt(roomData.room)===parseInt(room));if(listContainsRoom){setIsPrivateRoom(false);setFollowing(true);}else{setIsPrivateRoom(true);}}catch(err){console.log(err+`error in joinRoom mainRoom function`);}}if(messages.allRoomData.private_room===false){try{const publicAccess=await axios.get(`/api/users/${userLoginInfo.username}/rooms`);const roomsJoinedList=publicAccess.data.roomsJoined;const isInJoinedList=roomsJoinedList.find(roomToFind=>parseInt(roomData.room)===parseInt(roomToFind));if(isInJoinedList){setFollowing(true);}else if(!isInJoinedList){setFollowing(false);}}catch(err){console.log(err+\"mainRoom in JoinRoom() function for public access\");}}sessionStorage.setItem(\"lastRoom\",room.toString());setMessageRecieved(messages.messageHistory);if(messages.messageHistory.length<=0){setRoomIsEmpty(true);}};const roomNameChanger=event=>{setSearchName(event.target.value);};const roomChanger=event=>{setRoom(event.target.value);};const handleJoinRoomBtn=async()=>{const addTheRoom=await addRoom(userLoginInfo.username,room,roomData.room_name);if(addTheRoom){setJoinedListResponse(addTheRoom);if(addTheRoom==='User Joined the room successfully.'){}setFollowing(true);return;}if(error){console.error(error);}};const handleRemoveRoomBtn=async()=>{const removeFromList=await removeRoom(userLoginInfo.username,room,roomData.room_name);if(removeFromList){setJoinedListResponse(removeFromList);setFollowing(false);}if(error){console.error(error);}};const checkList=async()=>{try{const response=await axios.get(`/api/users/${userLoginInfo.username}/rooms`);const publicAccess=response.data.roomsJoined;const listContainsRoom=publicAccess.find(roomData=>parseInt(roomData.room)===parseInt(room));if(listContainsRoom){setFollowing(true);}else{setFollowing(false);}}catch(error){console.error(\"Error in checkList:\",error);// Handle the error as needed\n}};const sendMessageFunc=()=>{setClicked(true);setTimeout(()=>{setClicked(false);},800);if(message===\"\"){return;}const data={message,room,timestamp:getCurrentTime(),username:userLoginInfo.username,sentBy:userLoginInfo.username,imageUrl:sessionImage?sessionImage:userLoginInfo.imageUrl,cloudinary_id:sessionCloudinary_id?sessionCloudinary_id:userLoginInfo.cloudinary_id};socket.emit(\"send_message\",data);setMessageRecieved(prev=>[...prev,data]);setMessage(\"\");};// const deleteRoom = () => {\n//   setMainAccess(true);\n//   socket.emit(\"deleteRoom\", { room, username: userLoginInfo.username });\n//   socket.off(\"join_room\", room);\n//   navigate(\"/currentServers\");\n// };\nconst leaveRoom=()=>{socket.emit(\"leaveroom\",room);socket.disconnect();navigate(\"/currentservers\");};useEffect(()=>{// Handle socket connection\nif(!socket){setSocket(io.connect(`${PORT}`,{reconnection:true,reconnectionAttempts:20,reconnectionDelay:2000}));return setMainAccess(true);}checkList();const handleSocketConnect=async()=>{const fetchRoomHistoryData=async()=>{const data=await loadRoomHistory(room);setMessageRecieved(data.messageHistory);setSocketConnected(true);};await fetchRoomHistoryData();};// Initialize socket if not already initialized\n// Auto join room if main access is true\nif(mainAccess===true){joinRoom();setMainAccess(false);}// Socket event handlers\nsocket.on(\"connect\",handleSocketConnect);socket.on(\"disconnect\",reason=>{setSocketConnected(false);setMainAccess(true);});socket.on(\"receive_data\",async roomFoundData=>{setRoomData(roomFoundData);setRoom(roomFoundData.room_number);});socket.on(\"receive_message\",async data=>{if(data.room!==room)return;setTyping(false);const newData={message:data.message,username:data.sentBy,timestamp:getCurrentTime(),imageUrl:data.imageUrl,cloudinary_id:data.cloudinary_id};setMessageRecieved(prev=>[...prev,newData]);await loadRoomHistory(data.room);});socket.on(\"sender_is_typing\",data=>{currentTyper.current=data.toString();clearTimeout(typingTimeoutId.current);setTyping(true);typingTimeoutId.current=setTimeout(()=>{setTyping(false);},4000);});// Cleanup functions\nreturn()=>{socket.off(\"join_room\",joinRoom);socket.off(\"receive_message\");socket.off(\"disconnect\");socket.off(\"sender_is_typing\",useIsTyping);socket.off(\"receiveData\",joinRoom);};//eslint-disable-next-line\n},[socket,messageRecieved,isSocketConnected,typing,room]);useEffect(()=>{if(messagesStartRef.current){messagesStartRef.current.scrollTop=messagesStartRef.current.scrollHeight;}},[messageRecieved,typing]);useEffect(()=>{if(joinedListResponse===\"room was removed successfully\"){return setFollowing(false);}else if(joinedListResponse===\"User joined the room successfully.\"){return setFollowing(true);}else if(joinedListResponse===''){checkList();}if(joinedListResponse==='User has already joined this room.'){setFollowing(true);}//eslint-disable-next-line\n},[following,joinedListResponse]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{roomChanger:roomChanger,room:room?room:1,joinRoom:joinRoom,roomNameChanger:roomNameChanger}),/*#__PURE__*/_jsxs(\"div\",{className:\"room-wrapper-main-room\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"all-messages\",ref:messagesStartRef,children:[/*#__PURE__*/_jsx(\"div\",{className:\"room_name\",children:/*#__PURE__*/_jsx(\"h2\",{style:{textTransform:'capitalize'},children:lastRoom?roomData.room_name:String.fromCodePoint(0x1f449)+lastRoom+\" No Existing Room\"+String.fromCodePoint(0x1f448)})}),isPrivateRoom&&/*#__PURE__*/_jsx(PrivateRoomAccess,{style:{textTransform:'capitalize'},roomData:roomData,setIsPrivateRoom:setIsPrivateRoom}),messageRecieved.length>0&&!isPrivateRoom&&messageRecieved.map((msg,index)=>{const timestampParts=msg.timestamp.split(\" \");const datePart=timestampParts[0];const timePart=timestampParts[1]+\" \"+timestampParts[2];if(msg.sentBy===userLoginInfo.username){// Message sent by current user\nlet userLoggedIn=\"@\"+userLoginInfo.username.toUpperCase();//BLUE USER MESSAGE\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"messagesContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container blue\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-timestamp-left\",children:index!==0&&/*#__PURE__*/_jsxs(\"p\",{children:[datePart,/*#__PURE__*/_jsx(\"br\",{}),timePart]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-blue\",children:[/*#__PURE__*/_jsx(\"img\",{src:userLoginInfo.imageUrl||userLoginInfo.cloudinary_id,loading:\"lazy\",className:\"user-profile-pic blue\",alt:\"Profile-Pic\",onClick:()=>navigate(`/profile/${userLoginInfo.username}`)}),/*#__PURE__*/_jsx(Message,{msg:msg})]}),/*#__PURE__*/_jsx(\"p\",{className:\"user\",children:userLoggedIn})]})},index);}else{// GREEN USER MESSAGE\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"messagesContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container green\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-timestamp-right\",children:/*#__PURE__*/_jsxs(\"p\",{children:[datePart,/*#__PURE__*/_jsx(\"br\",{}),index!==0&&timePart]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-green\",children:[/*#__PURE__*/_jsx(\"img\",{src:msg.imageUrl||msg.cloudinary_id,loading:\"lazy\",className:\"user-profile-pic green\",alt:\"Profile-Pic\",onClick:()=>navigate(`/profile/${msg.sentBy}`)}),/*#__PURE__*/_jsx(Message,{msg:msg}),/*#__PURE__*/_jsx(\"p\",{className:\"user green\",children:msg.sentBy?\"@\"+msg.sentBy.toUpperCase():\"@\"+msg.username.toUpperCase()})]})]})},index);}}),roomIsEmpty&&navigate(`/createroom/${room}`),typing===true&&/*#__PURE__*/_jsx(TypingComp,{typer:currentTyper.current})]}),isPrivateRoom&&/*#__PURE__*/_jsx(\"div\",{className:\"helper_tools_wrapper\",children:/*#__PURE__*/_jsxs(\"button\",{id:\"leave-room-btn\",onClick:leaveRoom,children:[/*#__PURE__*/_jsx(ReplyRoundedIcon,{id:\"back-button\"}),\"Chat-Hubs\"]})}),!isPrivateRoom&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"send-input-wrapper\",children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Message...\",id:\"send_message_input\",value:message,onChange:event=>{setMessage(event.target.value);handleIsTyping(event);},maxLength:\"255\"}),/*#__PURE__*/_jsxs(\"button\",{className:`sendMsgBtn ${clicked?\"open\":\"\"}`,onClick:sendMessageFunc,children:[\"Send\",/*#__PURE__*/_jsx(\"img\",{src:sendIcon,className:` ${clicked?\"clicked\":\"\"}`,alt:\"icon-for-send\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"helper_tools_wrapper\",children:[/*#__PURE__*/_jsxs(\"button\",{id:\"leave-room-btn\",onClick:leaveRoom,children:[/*#__PURE__*/_jsx(ReplyRoundedIcon,{id:\"back-button\"}),\"Chat-Hubs\"]}),!following&&/*#__PURE__*/_jsxs(\"button\",{className:\"subscribe_to_room\",onClick:()=>handleJoinRoomBtn(),children:[/*#__PURE__*/_jsx(AddBoxOutlinedIcon,{id:\"subscribe_btn\"}),\"Subscribe\"]}),following&&/*#__PURE__*/_jsxs(\"button\",{className:\"subscribe_to_room _joined\",onClick:()=>handleRemoveRoomBtn(),children:[/*#__PURE__*/_jsx(IndeterminateCheckBoxOutlinedIcon,{id:\"unsubscribe_icon\"}),\"Unsubscribe\"]})]})]})]}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"status_container\",children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:\"white\"},children:\"Status :\"}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"statusBtn\",onClick:()=>{joinRoom();},style:isSocketConnected?{backgroundColor:\"#323232\"}:{backgroundColor:\"red\",color:\"#3691F0\"},children:[isSocketConnected&&\"Connected\",!isSocketConnected&&\"DISCONNECTED\"]})]})})]});};export default MainRoom;","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","AddBoxOutlinedIcon","IndeterminateCheckBoxOutlinedIcon","ReplyRoundedIcon","axios","useNavigate","io","Header","useIsTyping","PrivateRoomAccess","TypingComp","getCurrentTime","loadRoomHistory","sendIcon","useJoinedList","LoginContext","Message","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MainRoom","userLoginInfo","mainAccess","setMainAccess","socket","setSocket","clicked","setClicked","message","setMessage","messageRecieved","setMessageRecieved","roomData","setRoomData","lastRoom","sessionStorage","getItem","initialRoom","parseInt","room","setRoom","searchName","setSearchName","sessionImage","sessionCloudinary_id","messagesStartRef","PORT","process","env","REACT_APP_PORT","roomIsEmpty","setRoomIsEmpty","isSocketConnected","setSocketConnected","isPrivateRoom","setIsPrivateRoom","typing","setTyping","typingTimeoutId","currentTyper","addRoom","error","joinedListResponse","setJoinedListResponse","removeRoom","following","setFollowing","navigate","handleIsTyping","username","getSearchResults","response","get","data","console","joinRoom","searchRoomData","stringRoom","room_number","stringMessages","messageHistory","emit","messages","allRoomData","private_room","privateAccessExist","roomsJoined","listContainsRoom","find","err","log","publicAccess","roomsJoinedList","isInJoinedList","roomToFind","setItem","toString","length","roomNameChanger","event","target","value","roomChanger","handleJoinRoomBtn","addTheRoom","room_name","handleRemoveRoomBtn","removeFromList","checkList","sendMessageFunc","setTimeout","timestamp","sentBy","imageUrl","cloudinary_id","prev","leaveRoom","disconnect","connect","reconnection","reconnectionAttempts","reconnectionDelay","handleSocketConnect","fetchRoomHistoryData","on","reason","roomFoundData","newData","current","clearTimeout","off","scrollTop","scrollHeight","children","className","ref","style","textTransform","String","fromCodePoint","map","msg","index","timestampParts","split","datePart","timePart","userLoggedIn","toUpperCase","src","loading","alt","onClick","typer","id","placeholder","onChange","maxLength","color","type","backgroundColor"],"sources":["C:/Users/Tanner/Desktop/Chatty-Chatter/Chatty_Chatter/Client/src/components/MainRoom.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport AddBoxOutlinedIcon from \"@mui/icons-material/AddBoxOutlined\";\r\nimport IndeterminateCheckBoxOutlinedIcon from \"@mui/icons-material/IndeterminateCheckBoxOutlined\";\r\nimport ReplyRoundedIcon from \"@mui/icons-material/ReplyRounded\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport \"../App.css\";\r\nimport Header from \"./Header/Header\";\r\nimport \"./MainRoom.css\";\r\nimport { useIsTyping } from \"./Utility-mainRoom/IsTyping.js\";\r\nimport PrivateRoomAccess from \"./Utility-mainRoom/PrivateRoomAccess.js\";\r\nimport TypingComp from \"./Utility-mainRoom/TypingComp\";\r\nimport getCurrentTime from \"./Utility-mainRoom/getTime\";\r\nimport { loadRoomHistory } from \"./Utility-mainRoom/loadRoomHistory\";\r\nimport sendIcon from \"./Utility-mainRoom/svgs/SendIcon.svg\";\r\nimport useJoinedList from \"./Utility-mainRoom/useJoinedList.js\";\r\nimport { LoginContext } from \"./contexts/LoginContext\";\r\nimport Message from \"./Message.js\";\r\nconst MainRoom = () => {\r\n  const { userLoginInfo, mainAccess, setMainAccess, socket, setSocket } =\r\n    useContext(LoginContext);\r\n\r\n  const [clicked, setClicked] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageRecieved, setMessageRecieved] = useState([]);\r\n  const [roomData, setRoomData] = useState([]);\r\n  const lastRoom = sessionStorage.getItem(\"lastRoom\");\r\n  const initialRoom = lastRoom ? parseInt(lastRoom, 10) : 1;\r\n  const [room, setRoom] = useState(initialRoom);\r\n  const [searchName, setSearchName] = useState('');\r\n  const sessionImage = sessionStorage.getItem(\"image-url\");\r\n  const sessionCloudinary_id = sessionStorage.getItem(\"cloudinary_id\");\r\n  const messagesStartRef = useRef(null);\r\n  const PORT = process.env.REACT_APP_PORT;\r\n  const [roomIsEmpty, setRoomIsEmpty] = useState(false);\r\n  const [isSocketConnected, setSocketConnected] = useState(false);\r\n  const [isPrivateRoom, setIsPrivateRoom] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const typingTimeoutId = useRef(null);\r\n  const currentTyper = useRef(null);\r\n  const {\r\n    addRoom,\r\n    error,\r\n    joinedListResponse,\r\n    setJoinedListResponse,\r\n    removeRoom,\r\n  } = useJoinedList();\r\n  const [following, setFollowing] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const handleIsTyping = useIsTyping(\r\n    socket,\r\n    userLoginInfo.username,\r\n    room,\r\n    typingTimeoutId\r\n  );\r\n  const getSearchResults = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `/searchByNameFinder/${searchName}`\r\n      );\r\n      setMainAccess(true);\r\n      setSearchName('')\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error in getSearchResults:\", error);\r\n      // Handle the error (return a default value, show a message, etc.)\r\n      return null;\r\n    }\r\n  };\r\n  const joinRoom = async () => {\r\n \r\n    if(searchName !== ''){\r\n      const searchRoomData = await getSearchResults();\r\n      if(searchRoomData){\r\n        const stringRoom = searchRoomData.room_number;\r\n        const stringMessages = searchRoomData.messageHistory;\r\n\r\n        setRoom(stringRoom)\r\n        setSearchName('')\r\n        setMessageRecieved(stringMessages)\r\n        return navigate(`/chatroom/${stringRoom}`)\r\n      }\r\n    }\r\n    socket.emit(\"join_room\", {\r\n      room,\r\n      searchName,\r\n      username: userLoginInfo.username,\r\n      message,\r\n    });\r\n    \r\n    navigate(`/chatroom/${room}`);\r\n    const messages = await loadRoomHistory(room);\r\n    setRoomData(messages.allRoomData);\r\n    if (messages.allRoomData.private_room) {\r\n      try {\r\n        const privateAccessExist = await axios.get(\r\n          `/api/users/${userLoginInfo.username}/rooms`\r\n        );\r\n        const response = privateAccessExist?.data.roomsJoined;\r\n        const listContainsRoom = response.find(\r\n          (roomData) => parseInt(roomData.room) === parseInt(room)\r\n        );\r\n        if (listContainsRoom) {\r\n          setIsPrivateRoom(false);\r\n          setFollowing(true)\r\n        } else {\r\n          setIsPrivateRoom(true);\r\n        }\r\n      } catch (err) {\r\n        console.log(err + `error in joinRoom mainRoom function`);\r\n      }\r\n    }\r\n    if (messages.allRoomData.private_room === false) {\r\n      try {\r\n        const publicAccess = await axios.get(\r\n          `/api/users/${userLoginInfo.username}/rooms`\r\n        );\r\n        const roomsJoinedList = publicAccess.data.roomsJoined;\r\n        const isInJoinedList = roomsJoinedList.find(\r\n          (roomToFind) => parseInt(roomData.room) === parseInt(roomToFind)\r\n        );\r\n        if (isInJoinedList) {\r\n          setFollowing(true);\r\n        } else if (!isInJoinedList) {\r\n          setFollowing(false);\r\n        }\r\n      } catch (err) {\r\n        console.log(err + \"mainRoom in JoinRoom() function for public access\");\r\n      }\r\n    } \r\n    sessionStorage.setItem(\"lastRoom\", room.toString());\r\n    setMessageRecieved(messages.messageHistory);\r\n    if (messages.messageHistory.length <= 0) {\r\n      setRoomIsEmpty(true);\r\n    }\r\n  };\r\n  const roomNameChanger =(event)=>{\r\n    setSearchName(event.target.value)\r\n  }\r\n  const roomChanger = (event) => {\r\n    setRoom(event.target.value); \r\n  };\r\n  const handleJoinRoomBtn = async () => {\r\n    const addTheRoom = await addRoom(\r\n      userLoginInfo.username,\r\n      room,\r\n      roomData.room_name\r\n    );\r\n    if (addTheRoom) {\r\n      setJoinedListResponse(addTheRoom);\r\n      if(addTheRoom === 'User Joined the room successfully.'){}\r\n      setFollowing(true);\r\n      return;\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleRemoveRoomBtn = async () => {\r\n    const removeFromList = await removeRoom(\r\n      userLoginInfo.username,\r\n      room,\r\n      roomData.room_name\r\n    );\r\n    if (removeFromList) {\r\n      setJoinedListResponse(removeFromList);\r\n      setFollowing(false);\r\n    }\r\n    if (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\nconst checkList = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/api/users/${userLoginInfo.username}/rooms`\r\n    );\r\n    const publicAccess = response.data.roomsJoined;\r\n    const listContainsRoom = publicAccess.find(\r\n      (roomData) => parseInt(roomData.room) === parseInt(room)\r\n    );\r\n\r\n    if (listContainsRoom) {\r\n      \r\n      setFollowing(true);\r\n    } else {\r\n      setFollowing(false);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in checkList:\", error);\r\n    // Handle the error as needed\r\n  }\r\n};\r\n\r\n  const sendMessageFunc = () => {\r\n    setClicked(true);\r\n    setTimeout(() => {\r\n      setClicked(false);\r\n    }, 800);\r\n    if (message === \"\") {\r\n      return;\r\n    }\r\n    const data = {\r\n      message,\r\n      room,\r\n      timestamp: getCurrentTime(),\r\n      username: userLoginInfo.username,\r\n      sentBy: userLoginInfo.username,\r\n      imageUrl: sessionImage ? sessionImage : userLoginInfo.imageUrl,\r\n      cloudinary_id: sessionCloudinary_id\r\n        ? sessionCloudinary_id\r\n        : userLoginInfo.cloudinary_id,\r\n    };\r\n    socket.emit(\"send_message\", data);\r\n    setMessageRecieved((prev) => [...prev, data]);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  // const deleteRoom = () => {\r\n  //   setMainAccess(true);\r\n  //   socket.emit(\"deleteRoom\", { room, username: userLoginInfo.username });\r\n  //   socket.off(\"join_room\", room);\r\n  //   navigate(\"/currentServers\");\r\n  // };\r\n\r\n  const leaveRoom = () => {\r\n    socket.emit(\"leaveroom\", room);\r\n    socket.disconnect();\r\n    navigate(\"/currentservers\");\r\n  };\r\n  useEffect(() => {\r\n    // Handle socket connection\r\n\r\n    if (!socket) {\r\n      setSocket(\r\n        io.connect(`${PORT}`, {\r\n          reconnection: true,\r\n          reconnectionAttempts: 20,\r\n          reconnectionDelay: 2000,\r\n        })\r\n      );\r\n      return setMainAccess(true);\r\n    }\r\n    checkList();\r\n    const handleSocketConnect = async () => {\r\n      const fetchRoomHistoryData = async () => {\r\n        const data = await loadRoomHistory(room);\r\n        setMessageRecieved(data.messageHistory);\r\n        setSocketConnected(true);\r\n      };\r\n      await fetchRoomHistoryData();\r\n    };\r\n\r\n    // Initialize socket if not already initialized\r\n\r\n    // Auto join room if main access is true\r\n    if (mainAccess === true) {\r\n      joinRoom();\r\n\r\n      setMainAccess(false);\r\n    }\r\n\r\n    // Socket event handlers\r\n    socket.on(\"connect\", handleSocketConnect);\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      setSocketConnected(false);\r\n      setMainAccess(true);\r\n    });\r\n     socket.on(\"receive_data\", async (roomFoundData) => {\r\n       setRoomData(roomFoundData);\r\n       setRoom(roomFoundData.room_number);\r\n     });\r\n    socket.on(\"receive_message\", async (data) => {\r\n      if (data.room !== room) return;\r\n      setTyping(false);\r\n      const newData = {\r\n        message: data.message,\r\n        username: data.sentBy,\r\n        timestamp: getCurrentTime(),\r\n        imageUrl: data.imageUrl,\r\n        cloudinary_id: data.cloudinary_id,\r\n      };\r\n\r\n      setMessageRecieved((prev) => [...prev, newData]);\r\n      await loadRoomHistory(data.room);\r\n    });\r\n\r\n    socket.on(\"sender_is_typing\", (data) => {\r\n      currentTyper.current = data.toString();\r\n      clearTimeout(typingTimeoutId.current);\r\n      setTyping(true);\r\n      typingTimeoutId.current = setTimeout(() => {\r\n        setTyping(false);\r\n      }, 4000);\r\n    });\r\n    // Cleanup functions\r\n    return () => {\r\n      socket.off(\"join_room\", joinRoom);\r\n      socket.off(\"receive_message\");\r\n      socket.off(\"disconnect\");\r\n      socket.off(\"sender_is_typing\", useIsTyping);\r\n      socket.off(\"receiveData\",joinRoom);\r\n    };\r\n    //eslint-disable-next-line\r\n  }, [socket, messageRecieved, isSocketConnected, typing, room,]);\r\n  \r\n  useEffect(() => {\r\n    if (messagesStartRef.current) {\r\n      messagesStartRef.current.scrollTop =\r\n        messagesStartRef.current.scrollHeight;\r\n    }\r\n  }, [messageRecieved, typing]);\r\n  useEffect(() => {\r\n    if (joinedListResponse === \"room was removed successfully\") {\r\n      return setFollowing(false);\r\n    } else if (joinedListResponse === \"User joined the room successfully.\") {\r\n      return setFollowing(true);\r\n    }else if(joinedListResponse === ''){\r\n      checkList();\r\n    }\r\n    if(joinedListResponse === 'User has already joined this room.'){\r\n      setFollowing(true)\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [following, joinedListResponse]);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        roomChanger={roomChanger}\r\n        room={room ? room : 1}\r\n        joinRoom={joinRoom}\r\n        roomNameChanger={roomNameChanger}\r\n      />\r\n      <div className=\"room-wrapper-main-room\">\r\n        <div className={\"all-messages\"} ref={messagesStartRef}>\r\n          <div className=\"room_name\">\r\n            <h2 style={{textTransform:'capitalize'}}>\r\n              {lastRoom\r\n                ? roomData.room_name\r\n                : String.fromCodePoint(0x1f449) +\r\n                  lastRoom +\r\n                  \" No Existing Room\" +\r\n                  String.fromCodePoint(0x1f448)}\r\n            </h2>\r\n          </div>\r\n          {isPrivateRoom && (\r\n            <PrivateRoomAccess\r\n              style={{textTransform:'capitalize'}}\r\n              roomData={roomData}\r\n              setIsPrivateRoom={setIsPrivateRoom}\r\n            />\r\n          )}\r\n          {messageRecieved.length > 0 &&\r\n            !isPrivateRoom &&\r\n            messageRecieved.map((msg, index) => {\r\n              const timestampParts = msg.timestamp.split(\" \");\r\n              const datePart = timestampParts[0];\r\n              const timePart = timestampParts[1] + \" \" + timestampParts[2];\r\n              if (msg.sentBy === userLoginInfo.username) {\r\n                // Message sent by current user\r\n                let userLoggedIn = \"@\" + userLoginInfo.username.toUpperCase();\r\n                //BLUE USER MESSAGE\r\n                return (\r\n                  <div key={index} className={\"messagesContainer\"}>\r\n                    <div className={\"container blue\"}>\r\n                      <div className={\"message-timestamp-left\"}>\r\n                        {index !== 0 && (\r\n                          <p>\r\n                            {datePart}\r\n                            <br />\r\n                            {timePart}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                      <div className={\"message-blue\"}>\r\n                        <img\r\n                          src={\r\n                            userLoginInfo.imageUrl ||\r\n                            userLoginInfo.cloudinary_id\r\n                          }\r\n                          loading=\"lazy\"\r\n                          className={\"user-profile-pic blue\"}\r\n                          alt=\"Profile-Pic\"\r\n                          onClick={() =>\r\n                            navigate(`/profile/${userLoginInfo.username}`)\r\n                          }\r\n                        />\r\n                        <Message msg={msg}/>\r\n                      </div>\r\n                      <p className={\"user\"}>{userLoggedIn}</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                // GREEN USER MESSAGE\r\n                return (\r\n                  <div key={index} className={\"messagesContainer\"}>\r\n                    <div className={\"container green\"}>\r\n                      <div className={\"message-timestamp-right\"}>\r\n                        <p>\r\n                          {datePart}\r\n                          <br />\r\n                          {index !== 0 && timePart}\r\n                        </p>\r\n                      </div>\r\n                      <div className={\"message-green\"}>\r\n                        <img\r\n                          src={msg.imageUrl || msg.cloudinary_id}\r\n                          loading=\"lazy\"\r\n                          className={\"user-profile-pic green\"}\r\n                          alt=\"Profile-Pic\"\r\n                          onClick={() => navigate(`/profile/${msg.sentBy}`)}\r\n                        />\r\n                        <Message msg={msg}/>\r\n                        <p className={\"user green\"}>\r\n                          {msg.sentBy\r\n                            ? \"@\" + msg.sentBy.toUpperCase()\r\n                            : \"@\" + msg.username.toUpperCase()}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          {roomIsEmpty && navigate(`/createroom/${room}`)}\r\n          {typing === true && <TypingComp typer={currentTyper.current} />}\r\n        </div>\r\n     \r\n        {isPrivateRoom && (\r\n          <div className={\"helper_tools_wrapper\"}>\r\n            <button id={\"leave-room-btn\"} onClick={leaveRoom}>\r\n              <ReplyRoundedIcon id={\"back-button\"} />\r\n              Chat-Hubs\r\n            </button>\r\n          </div>\r\n        )}\r\n        {!isPrivateRoom && (\r\n          <>\r\n            <div className=\"send-input-wrapper\">\r\n              <input\r\n                placeholder={\"Message...\"}\r\n                id={\"send_message_input\"}\r\n                value={message}\r\n                onChange={(event) => {\r\n                  setMessage(event.target.value);\r\n                  handleIsTyping(event);\r\n                }}\r\n                maxLength=\"255\"\r\n              />\r\n              <button\r\n                className={`sendMsgBtn ${clicked ? \"open\" : \"\"}`}\r\n                onClick={sendMessageFunc}>\r\n                Send\r\n                <img\r\n                  src={sendIcon}\r\n                  className={` ${clicked ? \"clicked\" : \"\"}`}\r\n                  alt={\"icon-for-send\"}></img>\r\n              </button>\r\n            </div>\r\n            <div className={\"helper_tools_wrapper\"}>\r\n              <button id={\"leave-room-btn\"} onClick={leaveRoom}>\r\n                <ReplyRoundedIcon id={\"back-button\"} />\r\n                Chat-Hubs\r\n              </button>\r\n              {!following && (\r\n                <button\r\n                  className={\"subscribe_to_room\"}\r\n                  onClick={() => handleJoinRoomBtn()}>\r\n                  <AddBoxOutlinedIcon id={\"subscribe_btn\"} />\r\n                  Subscribe\r\n                </button>\r\n              )}\r\n              {following && (\r\n                <button\r\n                  className={\"subscribe_to_room _joined\"}\r\n                  onClick={() => handleRemoveRoomBtn()}>\r\n                  <IndeterminateCheckBoxOutlinedIcon id={\"unsubscribe_icon\"} />\r\n                  Unsubscribe\r\n                </button>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {}\r\n      <>\r\n        <div className={\"status_container\"}>\r\n          <h3 style={{ color: \"white\" }}>Status :</h3>\r\n          <button\r\n            type=\"button\"\r\n            className={\"statusBtn\"}\r\n            onClick={() => {\r\n              joinRoom();\r\n            }}\r\n            style={\r\n              isSocketConnected\r\n                ? { backgroundColor: \"#323232\" }\r\n                : { backgroundColor: \"red\", color: \"#3691F0\" }\r\n            }>\r\n            {isSocketConnected && \"Connected\"}\r\n            {!isSocketConnected && \"DISCONNECTED\"}\r\n          </button>\r\n        </div>\r\n      </>\r\n      {/* <div className=\"leave-delete-button\">\r\n        <button onClick={deleteRoom}>Delete Room</button>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\nexport default MainRoom;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}